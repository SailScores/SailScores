@model SailScores.Web.Models.SailScores.WhatIfViewModel

@{
    ViewData["Title"] = "What If: Test Scoring";
    Layout = "~/Views/Shared/_ClubLayout.cshtml";
}

<h2>Scoring "What If"</h2>
<p class="bd-lead">
Check how series results change if scored with different options.
</p>
<h4>@Model.Series.Season?.Name @Model.Series.Name</h4>
<p>Currently scored with @Model.Series.FlatResults.ScoringSystemName &ndash;
    @Model.Series.FlatResults.NumberOfSailedRaces sailed races and
    @Model.Series.FlatResults.NumberOfDiscards discard(s).</p>
<hr />
<div class="row">
    <div class="col-12">
        Select a scoring system and a number of discards to test
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <form id="optionsForm"
            asp-action="Show"
              asp-route-returnurl="@ViewData["ReturnUrl"]">
            <input type="hidden" id="SeriesId" asp-for="Series.Id" />
            <div>
                <label asp-for="SelectedScoringSystemId">Scoring System</label>
                <select class="form-select" id="ScoringSystemId" asp-for="SelectedScoringSystemId">
                    @foreach (var scoringSystem in Model.ScoringSystemOptions)
                    {
                        <!option value="@scoringSystem.Id" @(scoringSystem.Id == Model.Series.ScoringSystemId ? "selected" : "") >@scoringSystem.Name</!option>
                    }
                </select>
            </div>
            <br />
            <div class="mb-3">
                <label asp-for="Discards">Discards</label>
                <select class="form-select" id="Discards" asp-for="Discards">
                    @for(int i = 0; i < Model.Series.FlatResults.NumberOfSailedRaces; i++)
                    {
                        <!option value="@i" @(i == Model.Series.FlatResults.NumberOfDiscards ? "selected" : "") >@i</!option>
                    })
                </select>
            </div>
            <div class="mb-3">
                <label asp-for="ParticipationPercent" class="control-label"></label>
                <span class="small"><em>&ensp;Used for High Score Percent systems (including Cox-Sprague)</em></span>
                <input asp-for="ParticipationPercent" class="form-control" type="number" />
                <span asp-validation-for="ParticipationPercent" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <input id="submitButton" type="submit" value="Calculate Results" class="btn btn-primary my-2" />
                <a class="btn btn-outline-primary"
                    asp-action="Edit"
                    asp-controller="Series"
                    asp-route-id="@Model.SeriesId"
                    asp-route-returnUrl="@ViewData["ReturnUrl"]">Cancel</a>
            </div>
        </form>
    </div>
</div>
<div id="ssWaitingModal" class="waitingModal">
    <span>
        <div class="spinner-border" role="status"></div><br />
        <h3>Calculating...</h3>
    </span>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/vendor/bootstrap-select/js/bootstrap-select.min.js"></script>
    <script>
        $("#optionsForm").submit(function (e) {
            var waiting = $('#ssWaitingModal');
            if (!!waiting) {
                waiting.show();
            }
            $('#submitButton').attr('value', 'Please wait...');
        });
    </script>
}
