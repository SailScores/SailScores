@model SailScores.Web.Models.SailScores.FleetWithOptionsViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_ClubLayout.cshtml";
}

<h2>Create</h2>

<h4>Fleet@(Model.Regatta != null ? " for " + Model.Regatta.Name : "")</h4>
<hr />
<div class="row">
    <div class="col-lg-6 col-md-8">
        <form asp-action="Create"
              asp-route-returnurl="@ViewData["ReturnUrl"]">
        <input type="hidden" id="clubId" asp-for="ClubId" />
            <input type="hidden" id="regattaId" asp-for="RegattaId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <a class="text-primary"
                   data-container="body"
                   data-toggle="popover"
                   data-placement="top"
                   data-trigger="focus hover"
                   data-content="Full name including spaces such as: '2024 Die Hard MC Scows'">
                    <span class="far fa-question-circle"></span>
                </a>
                @if (Model.SuggestedFullName != null)
                {
                    <small>Suggested: @Model.SuggestedFullName</small>
                }
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ShortName" class="control-label"></label>
                <a class="text-primary"
                   data-container="body"
                   data-toggle="popover"
                   data-placement="top"
                   data-trigger="focus hover"
                   data-content="Used to create links; avoid spaces. Should be unique in the club, e.g. 2024DieHardMCs">
                    <span class="far fa-question-circle"></span>
                </a>
                <input asp-for="ShortName" class="form-control" />
                <span asp-validation-for="ShortName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NickName" class="control-label"></label>
                <a class="text-primary"
                   data-container="body"
                   data-toggle="popover"
                   data-placement="top"
                   data-trigger="focus hover"
                   data-content="Used as a display name, does not need to be unique, e.g. MC Scows">
                    <span class="far fa-question-circle"></span>
                </a>
                <input asp-for="NickName" class="form-control" />
                <span asp-validation-for="NickName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="form-check">
                    <input class="form-check-input" asp-for="IsActive" />
                    <label class="form-check-label"> Is an Active Fleet</label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FleetType" class="control-label"></label>
                @if (Model.Regatta != null)
                {
                        <small>For a regatta, usually set to 'Selected Boats'.</small>
                }
                <select id="fleetType" asp-for="FleetType" class="form-control"
                        asp-items="(Html.GetEnumSelectList<SailScores.Api.Enumerations.FleetType>())"
                        onChange="checkFleetOptionVisibility()">
                    <option selected="selected" value="">Select the type of Fleet</option>
                </select>
                <span asp-validation-for="FleetType" class="text-danger"></span>
            </div>
            <div id="classSelectGroup" class="form-group">
                <label asp-for="BoatClassIds" class="control-label">Class</label>
                <select multiple asp-for="BoatClassIds" class="form-control selectpicker">
                    @foreach (var boatclass in Model.BoatClassOptions)
                    {
                        <option value="@boatclass.Id">
                            @boatclass.Name
                        </option>
                    }
                </select>
                <span asp-validation-for="BoatClassIds" class="text-danger"></span>
            </div>
            <div id="boatSelectGroup" class="form-group">
                <label asp-for="CompetitorIds" class="control-label">Competitors</label>
                <select multiple asp-for="CompetitorIds" class="form-control custom-select selectpicker">
                    @foreach (var competitor in Model.CompetitorOptions.OrderBy(c => c.SailNumber)
               .ThenBy(c => c.AlternativeSailNumber)
               .ThenBy(c => c.Name))
                    {
                        <option value="@competitor.Id">
                            @competitor.SailNumber - @competitor.Name (@competitor.BoatClass.Name)
                        </option>
                    }
                </select>
                <span asp-validation-for="CompetitorIds" class="text-danger"></span>
            </div>
            <div id="compCreateGroup" class="form-group">
                <input id="createCompButton" type="button" value="Create New Competitor" class="btn btn-outline-primary btn-block" data-toggle="modal" data-target="#createCompetitor" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                @if (String.IsNullOrWhiteSpace((String)ViewData["ReturnUrl"]))
                {
                <a asp-controller="Admin"
                   asp-action="Index"
                   asp-fragment="fleets"
                   class="btn btn-outline-primary">Cancel</a>
                } else
                {
                    <a href="@ViewData["ReturnUrl"]"
                       class="btn btn-outline-primary">Cancel</a>
                }
            </div>
        </form>
    </div>
</div>
@await Html.PartialAsync("_competitorCreate", Model)

@section Scripts {
    <script type="text/javascript">
        function checkFleetOptionVisibility() {
            var f = document.getElementById('fleetType');
            var fType = f.options[f.selectedIndex].text;
            if (fType.indexOf('Class') > -1) {
                document.getElementById('classSelectGroup').style.display = 'block';
            } else {
                document.getElementById('classSelectGroup').style.display = 'none';
            }
            if (fType.indexOf('Selected Boats') > -1) {
                document.getElementById('boatSelectGroup').style.display = 'block';
                document.getElementById('compCreateGroup').style.display = 'block';
            } else {
                document.getElementById('boatSelectGroup').style.display = 'none';
                document.getElementById('compCreateGroup').style.display = 'none';
            }
        };
        checkFleetOptionVisibility();
        
    </script>
    
    <script src="~/js/fleetEditor.min.js" asp-append-version="true"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/vendor/bootstrap-select/js/bootstrap-select.min.js"></script>
    <script>
        $(function () {
            $('[data-toggle="popover"]').popover();
        })
    </script>
}
