@using Microsoft.AspNetCore.Routing
@using SailScores.Web.Models.SailScores;
@using SailScores.Core.Model;
@using SailScores.Web.Extensions;
@using SailScores.Web.Resources
@using Microsoft.Extensions.Localization

@inject IStringLocalizer<SharedResource> localizer

@model ClubCollectionViewModel<RaceSummaryViewModel>


@{
    ViewBag.Title = Model.ClubInitials + " " + @localizer["Races"];
    Layout = "_ClubLayout";
}

@section Sidebar {
    <nav class="col-md-2 d-none d-md-block bg-light sidebar">
        <div class="sidebar-sticky sticky-top">
            <ul class="nav flex-column">
                @foreach (var item in
                    Model.List.GroupBy(s =>
                        s.Season?.Name ?? String.Empty, s => s))
                {
                    <li class="nav-item">
                        <a class="nav-link active" href="#@item.Key">
                            @item.Key
                        </a>
                    </li>
                }

            </ul>
        </div>
    </nav>
}

<h2>@Context.GetRouteData().Values["ClubInitials"].ToString().ToUpperInvariant()
    @localizer["Races"]</h2>

<table class="table">
    <tbody>
        @foreach (var item in
            Model.List.GroupBy(s => s.Season?.Name ?? String.Empty, s => s))
        {
            <tr id="@item.Key">
                <td>
                    <h2>@item.Key</h2>
                </td>
            </tr>
            @foreach (var race in item)
            {
                <tr>
                    <td>
                        <span class="d-md-none">
                            <a asp-action="Details"
                               asp-controller="Race"
                               asp-route-id=@race.Id>@race.FleetShortName:
                                R@(race.Order)@race.Date.ToShortString()</a>
                        </span>
                        <span class="d-none d-md-block">
                            @Html.ActionLink(
                                race.CalculatedName
                                , "Details", new { id = race.Id })
                        </span>
                    </td>
                    <td>
                        @{ var lastSeries = race.SeriesNames.LastOrDefault(); }
                        @foreach (var seriesName in race.SeriesNames)
                        {
                            var separator = seriesName != lastSeries ? $", " : "";
                            <a href="~/@Model.ClubInitials/@race.Season.Name/@seriesName">@seriesName</a>@separator
                        }
                    </td>
                    <td>

            @Html.DisplayFor(modelItem => race.CompetitorCount)
            @(race.CompetitorCount == 1 ? "boat" : "boats")
        </td>
        <td>
            @Html.DisplayFor(modelItem => race.Name)
            @Html.DisplayFor(modelItem => race.Description)
        </td>
        <td>
            @race.State
        </td>

                </tr>
            }
        }
    </tbody>
</table>
