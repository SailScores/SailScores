@using Microsoft.AspNetCore.Routing
@using SailScores.Web.Models.SailScores;
@using SailScores.Core.Model;
@using SailScores.Core.Extensions;
@using SailScores.Web.Resources
@using Microsoft.Extensions.Localization

@inject IStringLocalizer<SharedResource> localizer

@model ClubCollectionViewModel<RaceSummaryViewModel>


@{
    ViewBag.Title = Model.ClubInitials + " " + @localizer["Races"];
    Layout = "_ClubLayout";
}

@section Sidebar {
    <nav class="col-md-2 d-none d-md-block bg-light sidebar">
        <div class="sidebar-sticky sticky-top">
            <ul class="nav flex-column">
                @foreach (var item in
                   Model.List.GroupBy(s =>
                       s.Season?.Name ?? String.Empty, s => s))
                {
                    <li class="nav-item">
                        <a class="nav-link active" href="#@item.Key">
                            @item.Key
                        </a>
                    </li>
                }

            </ul>
        </div>
    </nav>
}

<h2>
    @Context.GetRouteData().Values["ClubInitials"].ToString().ToUpperInvariant()
@localizer["Races"]
</h2>

<div class="container">
    @foreach (var item in
      Model.List.GroupBy(s => s.Season?.Name ?? String.Empty, s => s))
    {
        <div class="row">
            <div class="col-12">
                <h2>@item.Key</h2>
            </div>
        </div>
        @foreach (var race in item)
        {
<div class="row border-bottom mb-1 pb-1">
    <div class="col-6 col-md-4">
        <span class="d-md-none">
            <a asp-action="Details"
               asp-controller="Race"
               asp-route-id=@race.Id>
                @race.FleetShortName:
                R@(race.Order) @race.Date.ToShortString()
            </a>
        </span>
        <span class="d-none d-md-inline">
            @Html.ActionLink(
                race.CalculatedName
                , "Details", new { id = race.Id })
        </span>
    </div>
    <div class="col-3 small">
        @{ var lastSeries = race.SeriesNames.LastOrDefault(); }
        @foreach (var seriesName in race.SeriesNames)
        {
            var separator = seriesName != lastSeries ? $", " : "";
            <a href="~/@Model.ClubInitials/@race.Season.Name/@seriesName">@seriesName</a>@separator
        }
    </div>
    <div class="col-2">
        @Html.DisplayFor(modelItem => race.CompetitorCount)
        @localizer["boats"]
    </div>
    <div class="col-1 d-none d-md-inline">
        @race.State
    </div>
    <div class="col-12 d-none d-md-inline">
        @Html.DisplayFor(modelItem => race.Name)
        @Html.DisplayFor(modelItem => race.Description)
    </div>
</div>
        }
    }
</div>
