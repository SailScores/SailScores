@using SailScores.Web.Models.SailScores;
@using SailScores.Core.Extensions;
@using SailScores.Web.Resources
@using Microsoft.Extensions.Localization
@using SailScores.Web.Services

@inject IStringLocalizer<SharedResource> localizer
@inject AppSettingsService settingsService

@model ClubItemViewModel<RaceSummaryListViewModel>


@{
    ViewBag.Title = $"{Model.Item.CurrentSeason?.Name} {Model.ClubInitials} {localizer["Races"]}";
    ViewData["MetaDescription"] = $"{Model.ClubName} {localizer["Races"]} list";
    Layout = "_ClubLayout";
    bool hasExcluded = false;
}

@section Sidebar {
    <nav class="col-md-2 d-none d-md-block bg-almost sidebar">
        <div class="sidebar-sticky sticky-top">
            <ul class="nav flex-column">
                @foreach (var item in
            Model.Item.Seasons)
                {
                    <li class="nav-item">
                        <a asp-route="Race"
                        asp-route-clubInitials="@Model.ClubInitials"
                        asp-route-seasonName="@item.UrlName"
                        class="nav-link active">@item.Name</a>
                    </li>
                }

            </ul>
        </div>
    </nav>
}

<h1 class="h2">
    @Model.ClubInitials @localizer["Races"]
</h1>

<div class="container">
    @if (Model.CanEdit)
    {

        <div class="row bg-almost">
            <div class="col-sm-3 my-2">
                <a asp-controller="Race"
                asp-action="Create"
                asp-route-returnUrl="@settingsService.GetPreferredUri(Context.Request)"
                class="btn btn-outline-primary">@localizer["New Race"]</a>
            </div>
            <div class="col-sm-3 my-2">
                <a class="btn btn-outline-primary" asp-action="Index" asp-controller="Admin">
                    Club Admin
                </a>
            </div>
        </div>
        <br />
    }

    <div class="row">
        <div class="col-12">
            <h2>@Model.Item.CurrentSeason?.Name</h2>
        </div>
    </div>
    @foreach (var race in Model.Item.Races)
    {

        <div class="row border-bottom">
            @if (Model.CanEdit)
            {
                <div class="col-2 col-md-2 col-xl-1 px-0">
                    <a class="btn btn-sm btn-outline-danger"
                    asp-action="Delete"
                    asp-controller="Race"
                    asp-route-id="@race.Id"
                    title="Delete"><span class="fas fa-trash"></span></a>
                    &nbsp;
                    <a class="btn btn-sm btn-outline-primary"
                    asp-action="Edit"
                    asp-controller="Race"
                    asp-route-id="@race.Id"
                    title="Edit">
                        <span class="fas fa-pen"></span>
                    </a>&nbsp;
                </div>
            }
            <div class="@(Model.CanEdit? "col-9" : "col-12") col-md-10">
                <div class="row mb-1 pb-1">
                    <div class="col-6 col-md-3">
                        <span class="d-md-none">
                            <a id="smallracelink_@race.Id"
                            asp-action="Details"
                            asp-controller="Race"
                            asp-route-id=@race.Id>
                                @race.FleetName:
                                R@(race.Order) @race.Date.ToShortString()
                            </a>
                        </span>
                        <span class="d-none d-md-inline">
                            <a id="racelink_@race.Id"
                            asp-action="Details"
                            asp-controller="Race"
                            asp-route-id=@race.Id>
                                @race.CalculatedName
                            </a>
                        </span>
                    </div>
                    <div class="col-3 small">
                        @{ var lastSeries = race.SeriesUrlAndNames.LastOrDefault(); }
                        @foreach (var seriesUrlAndName in race.SeriesUrlAndNames)
                        {
                            var separator = seriesUrlAndName.Key != lastSeries.Key ? $", " : "";
                            <a href="~/@Model.ClubInitials/@race.Season.UrlName/@seriesUrlAndName.Key">@seriesUrlAndName.Value</a>@separator
                        }
                    </div>
                    <div class="col-2">
                        @Html.DisplayFor(modelItem => race.CompetitorCount)
                        @localizer["boats"]
                    </div>
                    <div class="col-1 d-none d-md-inline">
                        @if (race.ExcludeFromCompStats)
                        {
                            @race.State@:&nbsp;<span class="text-warning">*</span>
                            hasExcluded = true;
                        } else
                        {
                            @race.State
                        }
                    </div>
                    <div class="col-12 col-md-10 d-none d-md-inline">
                        @Html.DisplayFor(modelItem => race.Name)
                        @Html.DisplayFor(modelItem => race.Description)
                    </div>
                </div>
            </div>
        </div>
    }
    @if(hasExcluded)
    {
        <p class="text-warning">* Excluded from competitor stats.</p>
    }
    <br />
    <div class="row">
        <div class="d-md-none col-12">
            <h3>Other Seasons</h3>
        </div>
        <div class="d-md-none col-12">
            @foreach (var item in
             Model.Item.Seasons)
            {
                <a asp-route="Race"
                   asp-route-clubInitials="@Model.ClubInitials"
                   asp-route-seasonName="@item.UrlName"
                   class="nav-link active">@item.Name</a>
            }
        </div>
    </div>
</div>
