@model SailScores.Web.Models.SailScores.ScoringSystemWithOptionsViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_ClubLayout.cshtml";
}

<h2>Edit</h2>

<h4>Scoring System</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="ClubId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ParentSystemId">Parent Scoring System</label>
                <select id="parentSystemId" asp-for="ParentSystemId" class="form-control">
                    @foreach (var scoringSystem in Model.ParentSystemOptions)
                    {
                        <option value="@scoringSystem.Id">
                            @scoringSystem.Name
                        </option>
                    }
                </select>
                <span asp-validation-for="ParentSystemId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DiscardPattern" class="control-label"></label>
                <input asp-for="DiscardPattern" class="form-control" />
                <span asp-validation-for="DiscardPattern" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ParticipationPercent" class="control-label"></label>
                <span class="small"><em>&ensp;Used for High Score Percent systems</em></span>
                <input asp-for="ParticipationPercent" class="form-control" type="number"/>
                <span asp-validation-for="ParticipationPercent" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-controller="Admin"
                   asp-action="Index"
                   asp-fragment="scoringsystems"
                   class="btn btn-outline-primary">Cancel</a>
            </div>
        </form>
        <h3>Score Codes</h3>
        <a asp-action="Create" asp-controller="ScoreCode"           
            asp-route-scoringsystemid="@Model.Id"
            asp-route-returnUrl="@($"{Context.Request.Path}{Context.Request.QueryString}")">Create</a>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col"></th>
                    <th scope="col">Formula</th>
                    <th scope="col">Can be Discarded?</th>
                    <th scope="col">Came To Start?</th>
                    <th scope="col">Started?</th>
                    <th scope="col">Finished?</th>
                    <th scope="col">Keep Result?</th>
                    <th scope="col">Adjust other scores?</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var code in Model.ScoreCodes.OrderBy(c => c.Name))
                {
                    <tr>
                        <td>@code.Name</td>
                        <td>@code.Description</td>
                        <td>@code.Formula@code.FormulaValue</td>
                        <td>@((code.Discardable ?? false) ? "Yes" : "No")</td>
                        <td>@((code.CameToStart ?? false) ? "Yes" : "No")</td>
                        <td>@((code.Started ?? false) ? "Yes" : "No")</td>
                        <td>@((code.Finished ?? false) ? "Yes" : "No")</td>
                        <td>@((code.PreserveResult ?? false) ? "Yes" : "No")</td>
                        <td>@((code.AdjustOtherScores ?? false) ? "Yes" : "No")</td>
                        <td>
                            <a asp-action="Edit" asp-controller="ScoreCode" asp-route-id="@code.Id"
                               asp-route-returnUrl="@($"{Context.Request.Path}{Context.Request.QueryString}")">Edit</a>
                            <a asp-action="Delete" asp-controller="ScoreCode" asp-route-id="@code.Id"
                               asp-route-returnUrl="@($"{Context.Request.Path}{Context.Request.QueryString}")">Delete</a>
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="9">
                        <h4>Inherited codes</h4>
                    </td>
                </tr>

                @foreach (var code in Model.InheritedScoreCodes.OrderBy(c => c.Name))
                {
                    <tr>
                        <td>@code.Name</td>
                        <td>@code.Description</td>
                        <td>@code.Formula@code.FormulaValue</td>
                        <td>@((code.Discardable ?? false) ? "Yes" : "No")</td>
                        <td>@((code.CameToStart ?? false) ? "Yes" : "No")</td>
                        <td>@((code.Started ?? false) ? "Yes" : "No")</td>
                        <td>@((code.Finished ?? false) ? "Yes" : "No")</td>
                        <td>@((code.PreserveResult ?? false) ? "Yes" : "No")</td>
                        <td>@((code.AdjustOtherScores ?? false) ? "Yes" : "No")</td>
                        <td>
                            <a asp-action="Override" asp-controller="ScoreCode"
                               asp-route-code="@code.Name"
                               asp-route-scoringsystemid="@Model.Id"
                               asp-route-returnUrl="@($"{Context.Request.Path}{Context.Request.QueryString}")">Override</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
