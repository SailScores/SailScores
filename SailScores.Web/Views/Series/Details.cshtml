@using SailScores.Web.Models.SailScores
@using SailScores.Core.Model
@using SailScores.Core.FlatModel
@using SailScores.Api.Enumerations
@using Microsoft.Extensions.Localization
@using SailScores.Web.Resources
@using SailScores.Web.Services

@inject IStringLocalizer<SharedResource> localizer

@model ClubItemViewModel<Series>

@{
    ViewBag.Title = Model.Item.Name;
    Layout = "_ClubLayout";
}

<h2>@Model.Item.Name</h2>
@if (!String.IsNullOrWhiteSpace(Model.Item.Description))
{
    <h5>@Model.Item.Description</h5>
}
@Model.Item.FlatResults.NumberOfSailedRaces races sailed
with @Model.Item.FlatResults.NumberOfDiscards discards,
@Model.Item.FlatResults.Competitors.Count() competitors
@if (!String.IsNullOrWhiteSpace(@Model.Item.FlatResults.ScoringSystemName))
{
    @:&ndash; @Model.Item.FlatResults.ScoringSystemName
}
@if (Model.Item.FlatResults.IsPercentSystem && Model.Item.FlatResults.PercentRequired.HasValue)
{
    @:&ndash; @Model.Item.FlatResults.PercentRequired.Value.ToString("G5")% participation required for ranking
}

@await Html.PartialAsync("_ResultsTable", Model.Item)
                        
@if ((Model.Item.TrendOption ?? TrendOption.None) != TrendOption.None)
{
    <span class="d-none d-sm-inline">
        * Rank change from @localizer[EnumHelper<TrendOption>.GetDisplayValue(Model.Item.TrendOption.Value)]
    </span>
    <br />
}
@if (Model.Item.UpdatedDate.HasValue)
{
    <i>Last updated @(Model.Item.UpdatedDate.Value.ToString("f")) UTC</i>
}