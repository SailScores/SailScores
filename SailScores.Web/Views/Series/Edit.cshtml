@using SailScores.Web.Services
@using SailScores.Api.Enumerations

@model SailScores.Web.Models.SailScores.SeriesWithOptionsViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_ClubLayout.cshtml";
}

<h2>Edit</h2>

<h4>Series</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="ClubId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span class="small">Some special characters are not allowed: : / ? # [ ] @@ ! $ & ' ( ) * + , ; =</span>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="IsImportantSeries" /> List as Top Series
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="ResultsLocked" /> Lock Results
                    </label>
                    <span class="small">Prevents scores from recalculating for this series</span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div id="seasonSelectGroup" class="form-group">
                <label asp-for="SeasonId" class="control-label">Season</label>
                <select asp-for="SeasonId" class="form-control">
                    <option selected="selected">Select a season...</option>
                    @foreach (var season in Model.SeasonOptions)
                    {
                        <option value="@season.Id">
                            @season.Name
                        </option>
                    }
                </select>
                <span asp-validation-for="SeasonId" class="text-danger"></span>
            </div>
            <div id="seasonSelectGroup" class="form-group">
                <label asp-for="SeasonId" class="control-label">Season</label>
                <select asp-for="SeasonId" class="form-control">
                    <option selected="selected">Select a season...</option>
                    @foreach (var season in Model.SeasonOptions)
                    {
                        <option value="@season.Id">
                            @season.Name
                        </option>
                    }
                </select>
                <span asp-validation-for="SeasonId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TrendOption">Calculate Rank Trend</label>
                <select id="ScoringSystemId" asp-for="TrendOption" class="form-control">
                    @foreach (var trendOption in EnumHelper<TrendOption>.GetValues(TrendOption.None))
                    {
                    <option value="@trendOption">
                        @(EnumHelper<TrendOption>.GetDisplayValue(trendOption))
                    </option>
                    }
                </select>
                <span asp-validation-for="TrendOption" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-controller="Admin"
                   asp-action="Index"
                   asp-fragment="series"
                   class="btn btn-outline-primary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
