@using SailScores.Web.Models.SailScores;
@using Microsoft.Extensions.Localization
@using SailScores.Web.Resources
@using SailScores.Web.Services

@inject IStringLocalizer<SharedResource> localizer
@inject AppSettingsService settingsService

@model ClubCollectionViewModel<SeriesSummary>
@{
    ViewBag.Title = Model.ClubInitials + " " + localizer["Series"];
    ViewData["MetaDescription"] = $"{Model.ClubInitials} {localizer["Series"]} list";
    Layout = "_ClubLayout";
}

@section Sidebar {
    <nav class="col-md-2 d-none d-md-block bg-almost sidebar">
        <div class="sidebar-sticky sticky-top">
            <ul class="nav flex-column">
                @foreach (var item in Model.List.GroupBy(s => s.Season?.Name ?? String.Empty, s => s))
                {
                    <li class="nav-item">
                        <a class="nav-link active" href="#@item.FirstOrDefault()?.Season?.UrlName">
                            @item.Key
                        </a>
                    </li>
                }
            </ul>
        </div>
    </nav>
}

<div class="container">
    <h1 class="h2">Series by Seasons</h1>
    @if (Model.CanEdit)
    {

        <div class="row bg-almost">
            <div class="col-sm-3 my-2">
                <a asp-controller="Series"
                   asp-action="Create"
                   asp-route-returnUrl="@settingsService.GetPreferredUri(Context.Request)"
                   class="btn btn-outline-primary">@localizer["New Series"]</a>
            </div>
        </div>
        <br />
    }
    @foreach (var item in Model.List.GroupBy(s => s.Season?.Name ?? String.Empty, s => s))
    {
        <div class="row">
            <div class="col-12" id="@item.FirstOrDefault()?.Season?.UrlName">
                <h2>@item.Key</h2>
            </div>
        </div>
        foreach (var series in item)
        {
            <div class="row border-bottom mb-1 pb-1">
                <div class="col-md-5">
                    <a href="~/@Model.ClubInitials/@series.Season.UrlName/@series.UrlName">@Html.DisplayFor(modelItem => series.Name)</a>
                    <span class="avoidwrap">(@(series.Races?.Count.ToString() ?? "No") @localizer["Races"])</span>
                </div>

                <div class="col-md-4">
                    <span class="small-on-small">@series.DateString</span>
                </div>
                <div class="col-md-3">
                    @if (series.UpdatedDate.HasValue)
                    {
                        <span class="d-none d-md-table-cell updated-date">@localizer["Updated"] @(series.UpdatedDate.Value.ToString("d"))</span>
                    }
                </div>
                <div class="col-12 ml-3">
                    @Html.DisplayFor(modelItem => series.Description)
                </div>
            </div>
        }
    }
</div>