@using Humanizer

@model SailScores.Web.Models.SailScores.ScoreCellViewModel
@{
    var classSb = new System.Text.StringBuilder();
    string cellFinishClasses = "";
    var place = Model.Result?.Place;
    var scoreValue = Model.Result?.ScoreValue;
    var hasCode = !String.IsNullOrEmpty(Model.Result?.Code);
    var isTie = Model.Result?.Code == "TIE";
    if ((place == 1 || (scoreValue == 1m && !Model.IsPercentSystem)) && !hasCode &&
        (scoreValue < 1m || scoreValue == 1m || scoreValue == 1.5m || scoreValue == 2.0m || Model.IsPercentSystem))
    {
        classSb.Append("finish-first ");
    }
    else if ((place == 2 || place == 3) && isTie && (scoreValue == 1.5m || scoreValue == 2.0m))
    {
        classSb.Append("finish-first ");
    }
    else if ((place == 2 || (scoreValue == 2m && !Model.IsPercentSystem)) && !hasCode && (scoreValue == 2m || scoreValue == 2.5m || scoreValue == 3.0m || Model.IsPercentSystem))
    {
        classSb.Append("finish-second ");
    }
    else if ((place == 3 || place == 4) && isTie && (scoreValue == 2.5m || scoreValue == 3.0m))
    {
        classSb.Append("finish-second ");
    }
    else if ((place == 3 || (scoreValue == 3m && !Model.IsPercentSystem)) && !hasCode && (scoreValue == 3m || scoreValue == 3.5m || scoreValue == 4.0m || Model.IsPercentSystem))
    {
        classSb.Append("finish-third ");
    }
    else if ((place == 4 || place == 5) && isTie && (scoreValue == 3.5m || scoreValue == 4.0m))
    {
        classSb.Append("finish-third ");
    }

    if ((Model.Result != null && Model.Result.Discard)
       || (Model.IsPercentSystem && Model.Result != null && Model.Result.Code == "DNC"))
    {
        classSb.Append("discardmuted ");
    }

    cellFinishClasses = classSb.ToString();
}


@if (Model != null && Model.Result != null )
{
    <td class="text-center @cellFinishClasses ">
        <span class="@(Model.Result.Discard ? "discardmuted" : "")">
            @* hide all cell contents if DNC, discarded, and series setting. *@
            @if (!(Model.HideDncDiscards && Model.Result.Code == "DNC" &&
                (Model.Result.Discard || Model.IsPercentSystem )))
            {
                @if (Model.Result.Discard)
                {
                    @Html.Raw("<s>")
                }
                @if(Model.Result.Code != null
                   && Model.ScoreCodesUsed != null
                   && Model.ScoreCodesUsed.ContainsKey(Model.Result.Code))
                {
                    var muteText = (Model.IsPercentSystem && Model.Result.Code == "DNC") ? "discardmuted" : "";
                    @Html.Raw($"<span title=\"{Model.ScoreCodesUsed[Model.Result.Code].Description}\" class=\"{muteText}\">")
                }
                @Model.Result.Code
                @if (Model.Result.Code != null
                   && Model.ScoreCodesUsed != null
                   && Model.ScoreCodesUsed.ContainsKey(Model.Result.Code))
                {
                    @Html.Raw("</span> ")
                }
                @if (Model.IsPercentSystem && Model.Result.Place.HasValue)
                {
                    var tooltipText = Model.Result.PerfectScoreValue == null ?
                        Model.Result.Place.Value.Ordinalize() :
                    $"of {Model.Result.PerfectScoreValue.Value}&#010;{Model.Result.Place.Value.Ordinalize()}";
                
                    <span data-bs-html="true" title="@Html.Raw(tooltipText)">@((Model.Result.ScoreValue ?? Model.Result.Place)?.ToString("N1"))</span>
                } else {
                    @((Model.Result.ScoreValue ?? Model.Result.Place)?.ToString("N1"))
                }
                @if (Model.Result.Discard)
                {
                    @Html.Raw("</s>")
                }
            }
        </span>
</td>
}
else
{
    <td></td>
}