@using SailScores.Core.Model
@using SailScores.Core.FlatModel
@using SailScores.Api.Enumerations
@using Microsoft.Extensions.Localization
@using SailScores.Web.Resources
@using SailScores.Web.Services
@using SailScores.Web.Services.Interfaces

@inject IStringLocalizer<SharedResource> localizer
@inject IWeatherService weatherService

@model ResultsTableViewModel
@{
    bool NoCompetitors = false;
}

@if (Model != null)
{
    if (Model.Results.IsPreliminary ?? false)
    {
        <div><strong><span class="text-warning">Results are preliminary.</span> Protests may be pending.</strong></div>
    }
    <div class="table-responsive-sm">
        <table class="table table-hover table-sm mb-1 " summary="Results for series">
            <thead>
                <tr>
                    <th scope="col">@localizer["Place"]</th>
                    @if (Model.ShowTrend && !Model.ShowTrendOnAllDevices)
                    {
                        <th scope="col" class="d-none d-sm-table-cell">@localizer["Change"]*</th>
                    }
                    @if (Model.ShowTrendOnAllDevices)
                    {
                        <th scope="col" class="d-table-cell">@localizer["Change"]*</th>
                    }
                    <th scope="col">@localizer["Sail"]</th>
                    <th scope="col">@localizer["Helm"]</th>
                    <th scope="col" class="d-none d-sm-table-cell">@localizer["Boat"]</th>
                    @if (Model.ShowCompetitorClub)
                    {
                        <th scope="col" class="d-none d-sm-table-cell">@localizer["Club"]</th>
                    }
                    <th scope="col" class="text-center">@localizer["Total"]</th>
                    @{
                        var colCount = 0;
                        var needCompNameColumn = false;
                        DateTime? prevRaceDate = null;
                    }
                    @foreach (var race in Model.Results?.Races ?? Enumerable.Empty<FlatRace>())
                    {
                        ++colCount;
                        if (!needCompNameColumn)
                        {
                            needCompNameColumn = colCount % 23 == 20 && (Model.Results.NumberOfSailedRaces - colCount) > 10;
                        }
                        if (needCompNameColumn && (race.Date != prevRaceDate || colCount % 23 == 4 ))
                        {
                            needCompNameColumn = false;
                            <th scope="col">@localizer["Helm"]</th>
                        }
                        if (race.State == RaceState.Abandoned || race.State == RaceState.Scheduled)
                        {
                            <th class="text-center d-none d-sm-table-cell" scope="col">
                                @if (Model.IsExport)
                                {
                                    @race.ShortName
                                }
                                else
                                {
                                    @Html.ActionLink(
                                                 @race.ShortName
                                                 , "Details", "Race", new { id = race.Id })
                                    <div class="weather">
                                        @if (race.WindDirectionDegrees.HasValue)
                                        {
                                            <span class="wi wi-wind from-@race.WindDirectionDegrees?.ToString("N0")-deg ss-wi" data-toggle="tooltip" title="@race.WindDirectionDegrees?.ToString("N0")°"></span>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(race.WindSpeed))
                                        {<span data-toggle="tooltip" title="@race.WindSpeedUnits">@race.WindSpeed</span>}
                                        @if (!string.IsNullOrWhiteSpace(race.WeatherIcon))
                                        {
                                            <span class="wi @weatherService.GetIconCharacter(race.WeatherIcon) ss-wi"></span>
                                        }
                                    </div>
                                }

                            </th>
                        }
                        else
                        {
                            <th class="text-center" scope="col">
                                @if (Model.IsExport)
                                {
                                    @race.ShortName
                                }
                                else
                                {
                                    <a asp-controller="Race"
                                       asp-action="Details"
                                       asp-route-id="@race.Id"
                                       class=" @(race.State == RaceState.Preliminary ? "text-warning" : "")">@race.ShortName</a>
                                    <br />
                                    <div class="weather">
                                        @if (race.WindDirectionDegrees.HasValue)
                                        {
                                            <span class="wi wi-wind from-@race.WindDirectionDegrees?.ToString("N0")-deg ss-wi" data-toggle="tooltip" title="@race.WindDirectionDegrees?.ToString("N0")°"></span>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(race.WindSpeed))
                                        {<span data-toggle="tooltip" title="@race.WindSpeedUnits">@race.WindSpeed</span>}
                                        @if (!string.IsNullOrWhiteSpace(race.WeatherIcon))
                                        {
                                            <span class="wi @weatherService.GetIconCharacter(race.WeatherIcon) ss-wi"></span>
                                        }
                                    </div>
                                }
                            </th>
                        }
                        prevRaceDate = race.Date;
                    }
                    @if ((Model.Results.NumberOfSailedRaces) > 4)
                    {
                        <th scope="col" class="d-table-cell @((Model.Results.NumberOfSailedRaces < 25)?"d-md-none":"")">
                            @localizer["Helm"]
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @{ var firstRow = true;
                    var compList = Model.Results?.Competitors;
                    if ((compList?.Count() ?? 0) == 0)
                    {
                        compList = new List<FlatCompetitor>{
                        new FlatCompetitor {
                            Name= localizer["No competitors"]}
                        };
                        NoCompetitors = true;
                    }
                }

                @foreach (var comp in compList)
                {
                    colCount = 0;
                    var compScore = Model.Results.GetScore(comp);
                    <tr>
                        <th scope="row">@compScore?.Rank</th>
                    @if (Model.ShowTrend && !Model.ShowTrendOnAllDevices)
                    {
                        <th scope="row" class="d-none d-sm-table-cell">
                            @if (compScore?.Trend > 0)
                            {
                            <span class="text-success">
                                <span class="fas fa-arrow-up"></span>
                                    @compScore.Trend.Value
                            </span>
                            }
                            else if (compScore?.Trend < 0)
                            {
                                <span class="text-danger">
                                    <span class="fas fa-arrow-down"></span>
                                        @Math.Abs(compScore.Trend.Value)
                                </span>
                            }
                        </th>
                    }
                    @if (Model.ShowTrendOnAllDevices)
                    {
                        <th scope="row" class="d-table-cell">
                            @if (compScore?.Trend > 0)
                            {
                                <span class="text-success">
                                    <span class="fas fa-arrow-up"></span>
                                        @compScore.Trend.Value
                                </span>
                            }
                            else if (compScore?.Trend < 0)
                            {
                                <span class="text-danger">
                                    <span class="fas fa-arrow-down"></span>
                                        @Math.Abs(compScore.Trend.Value)
                                </span>
                            }
                        </th>   
                    }
                    <th scope="row">
                        @if ((Model.PreferAlternativeSailNumbers)
                     && !String.IsNullOrWhiteSpace(comp.AlternativeSailNumber))
                        {
                            @comp.AlternativeSailNumber
                        }
                        else
                        {
                            @comp.SailNumber
                        }
                    </th>
                    <th scope="row">
                        @if (Model.IsExport || Model.ExcludeCompetitorLinks || NoCompetitors)
                        {
                            @comp.Name
                        }
                        else
                        {
                            <a asp-route="Competitor"
                               asp-route-urlName="@(comp.UrlName)"
                               asp-route-clubInitials="@ViewContext.RouteData.Values["ClubInitials"]">@comp.Name</a>
                        }
                    </th>
                    <td class="d-none d-sm-table-cell">@comp.BoatName</td>
                    @if (Model.ShowCompetitorClub)
                    {
                        <td class="d-none d-sm-table-cell">@comp.HomeClubName</td>
                    }
                    <td scope="row" class="text-center">
                        <strong>
                            @if (Model.Results.IsPercentSystem)
                            {
                                string tooltipText = String.Empty;
                                if (compScore?.TotalScore.HasValue ?? false)
                                {
                                    tooltipText = compScore?.PointsEarned + " / " + compScore?.PointsPossible;
                                }
                                if (tooltipText != String.Empty && (compScore?.ParticipationPercent.HasValue ?? false))
                                {
                                    tooltipText = tooltipText + "&#010;";
                                }
                                if (compScore?.ParticipationPercent.HasValue ?? false)
                                {
                                        tooltipText = tooltipText + "Participation: " + @String.Format("{0:0.#}%", compScore?.ParticipationPercent);
                                }
                                <span data-toggle="tooltip" title="@Html.Raw(tooltipText)">
                                        @(compScore?.TotalScore != null
                                            ? String.Format("{0:0.###}", compScore?.TotalScore)
                                        : Html.Raw("&mdash;"))
                                </span>
                            } else {
                                    @String.Format("{0:0.###}", compScore?.TotalScore)
                            }
                        </strong>
                    </td>
                    @{
                        colCount = 0;
                        needCompNameColumn = false;
                        prevRaceDate = null;
                    }
                        @foreach (var race in Model.Results.Races)
                    {
                        ++colCount;
                        if (!needCompNameColumn)
                        {
                                needCompNameColumn = colCount % 23 == 20 && (Model.Results.NumberOfSailedRaces - colCount) > 10;
                        }
                        if (needCompNameColumn && (race.Date != prevRaceDate || colCount % 23 == 4))
                        {
                            needCompNameColumn = false;
                            <td>@comp.Name</td>

                        }
                        if (race.State == RaceState.Abandoned)
                        {
                            if (firstRow)
                            {
                                    <td rowspan="@(Model.Results?.Competitors?.Count() ?? 1)" class="abandoned d-none d-sm-table-cell">
                                    <span>ABANDONED</span>
                                </td>
                            }
                        }
                        else if (race.State == RaceState.Scheduled)
                        {
                            if (firstRow)
                            {
                                    <td rowspan="@(Model.Results?.Competitors?.Count() ?? 1)" class="scheduled d-none d-sm-table-cell">
                                    <span>SCHEDULED</span>
                                </td>
                            }
                        }
                        else
                        {
                            var result = Model.Results.GetScore(comp, race);

                            @await Html.PartialAsync("_ScoreCell", new ScoreCellViewModel
                               {
                                   Result = result,
                                    IsPercentSystem = Model.Results.IsPercentSystem,
                                    ScoreCodesUsed = Model.Results.ScoreCodesUsed,
                                    HideDncDiscards = Model.HideDncDiscards
                               })
                        }
                        prevRaceDate = race.Date;
                    }
                    @if ((Model.Results.NumberOfSailedRaces) > 4)
                    {
                        <th class="d-table-cell @(( Model.Results.NumberOfSailedRaces < 25)?"d-md-none":"")"
                        scope="row">@comp.Name</th>
                    }
                    @{
                        firstRow = false;
                    }
                </tr>
                        }
            </tbody>
        </table>
        <div class="row">
            <div class="col-md-9">
                @if (Model.ShowTrend && !Model.ShowTrendOnAllDevices)
                {
                    <span class="d-none d-sm-inline">
                        * @Model.TrendLegend
                    </span>
                }
                @if (Model.ShowTrendOnAllDevices)
                {
                    <span>
                        * @Model.TrendLegend
                    </span>
                }
            @if (Model.UpdatedDate.HasValue)
            {
                <span class="small font-italic">
                    @localizer["Updated"] @(Model.UpdatedDate.Value.ToString("f")) UTC
                    @if (!String.IsNullOrWhiteSpace(Model.Results.UpdatedBy))
                    {
                        @:by @Model.Results.UpdatedBy
                    }
                </span>
            }
            </div>
            <div class="col-md-3 text-right">
                @if (Model.ShowExportButtons)
                {
                    <a class="btn btn-outline-secondary btn-sm"
                       asp-action="ExportHtml"
                       asp-controller="Series"
                       asp-route-id="@Model.SeriesId"
                       title="Export as HTML">
                        <span class="fas fa-2x fa-file-code"></span>
                    </a>
                    <a class="btn btn-outline-secondary btn-sm"
                       asp-action="ExportCsv"
                       asp-controller="Series"
                       asp-route-id="@Model.SeriesId"
                       title="Export as CSV">
                        <span class="fas fa-2x fa-file-csv"></span>
                    </a>
                }
            </div>
        </div>
    </div>
}
else
{
    <div></div>
}