@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Localization
@using SailScores.Identity.Entities
@using SailScores.Web.Resources;
@using SailScores.Web.Services;

@inject SignInManager<ApplicationUser> SignInManager
@inject AppSettingsService settingsService

@inject IStringLocalizer<SharedResource> localizer

@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    var displayName = (!String.IsNullOrWhiteSpace(user.FirstName) && !String.IsNullOrWhiteSpace(user.LastName) )
        ? $"{user.FirstName} {user.LastName}"
        : user.Email;
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="float-end">
        <a class="float-end" href="/Identity/Account/Manage/UpdateProfile" title="Update User Info">@displayName</a><br />
        <button type="submit" class="btn btn-link float-end" >@localizer["Log out"]</button>
    </form>
}
else
{
    <a class="float-end" asp-area="" asp-controller="Account" asp-action="Login"
       asp-route-returnUrl="@settingsService.GetPreferredUri(Context.Request)">@localizer["Log in"]</a>
}
