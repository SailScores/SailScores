{"version":3,"file":"seriesChart.min.js","mappings":"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","sources":["webpack://asp.net/./wwwroot/js/seriesChart.js"],"sourcesContent":["\r\n(function () {\r\n\r\n    var chartOverallWidth = 960;\r\n    var chartOverallHeight = 600;\r\n    var margin = 30;\r\n    var legendWidth = 150;\r\n    var legendLineHeight = 16;\r\n    var legendMargin = 2;\r\n\r\n\r\n    var charts = document.getElementsByClassName(\"results-chart\");\r\n    for (var i = 0; i < charts.length; i++) {\r\n        drawChart(charts[i].dataset.seriesId, \"#\"+charts[i].id)\r\n    }\r\n\r\n\r\n    function drawChart(seriesId, elementId) {\r\n        //var chartElementId = elementId;\r\n\r\n        var minDate;\r\n        var maxDate;\r\n\r\n        var dataPath = \"/series/chart?seriesId=\" + seriesId;\r\n        if (typeof (d3) != \"undefined\" && d3 != null) {\r\n            d3.json(dataPath).then(processChartData);\r\n        }\r\n\r\n\r\n        function getDate(result, allData) {\r\n            var thisRace = allData.races.find(r => r.id === result.raceId);\r\n            var racesThisDate = allData.races.filter(r => r.date === thisRace.date);\r\n\r\n            var order = racesThisDate.findIndex(r => r.id === thisRace.id) + 1;\r\n\r\n            return new Date(new Date(thisRace.date).getTime()\r\n                + (order * 24 * 60 * 60 * 1000 / (racesThisDate.length + 1)));\r\n        }\r\n\r\n        function getY(result, allData) {\r\n\r\n            var maxScore = Math.max(...allData.entries\r\n                .filter(e => e.raceId === result.raceId)\r\n                .map(e => e.seriesPoints));\r\n            var minScore = Math.min(...allData.entries\r\n                .filter(e => e.raceId === result.raceId\r\n                    && e.seriesPoints !== 0)\r\n                .map(e => e.seriesPoints));\r\n            var minNonnullScore = Math.min(...allData.entries\r\n                .filter(e => e.raceId === result.raceId\r\n                    && e.seriesPoints !== 0\r\n                    && e.seriesPoints !== null)\r\n                .map(e => e.seriesPoints));\r\n\r\n            // This gives a better bottom of chart than 0 for Cox-Sprague\r\n            minScore = Math.max(minScore, minNonnullScore - 10)\r\n            var ratio = (Math.max(result.seriesPoints - minScore, 0 )) / (maxScore - minScore);\r\n            if (!allData.isLowPoints) {\r\n                ratio = 1.0 - ratio;\r\n            }\r\n            if (isNaN(ratio)) {\r\n                ratio = 0;\r\n            }\r\n            if (result.seriesPoints === 0) {\r\n                ratio = 1;\r\n            }\r\n            return margin + (ratio * (chartOverallHeight - margin - margin));\r\n        }\r\n\r\n        function responsivefy(svg) {\r\n            // get container + svg aspect ratio\r\n            var container = d3.select(svg.node().parentNode),\r\n                width = parseInt(svg.style(\"width\")),\r\n                height = parseInt(svg.style(\"height\")),\r\n                aspect = width / height;\r\n\r\n            // add viewBox and preserveAspectRatio properties,\r\n            // and call resize so that svg resizes on inital page load\r\n            svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\r\n                .attr(\"preserveAspectRatio\", \"xMinYMid\")\r\n                .call(resize);\r\n\r\n            // to register multiple listeners for same event type, \r\n            // you need to add namespace, i.e., 'click.foo'\r\n            // necessary if you call invoke this function for multiple svgs\r\n            // api docs: https://github.com/mbostock/d3/wiki/Selections#on\r\n            d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\r\n\r\n            // get width of container and resize svg to fit it\r\n            function resize() {\r\n                var targetWidth = parseInt(container.style(\"width\"));\r\n                if (targetWidth <= 100) {// assume percent\r\n                    targetWidth = width;\r\n                }\r\n                svg.attr(\"width\", targetWidth);\r\n                svg.attr(\"height\", Math.round(targetWidth / aspect));\r\n            }\r\n        }\r\n\r\n        function getCompName(id, competitors) {\r\n            return competitors.find(c => c.id === id).name;\r\n        }\r\n\r\n        function processChartData(data) {\r\n            if (data === null) {\r\n                return;\r\n            }\r\n            var dates = data.races.map(r => new Date(r.date));\r\n            minDate = new Date(Math.min.apply(null, dates));\r\n            maxDate = new Date(Math.max.apply(null, dates));\r\n            maxDate.setDate(maxDate.getDate() + 1);\r\n\r\n            var xScale = d3.scaleTime()\r\n                .domain([minDate, maxDate])\r\n                .range([margin, chartOverallWidth - margin - legendWidth]);\r\n            var color = d3.scaleOrdinal(d3.schemeDark2);\r\n\r\n            chartOverallHeight = data.competitors.length * legendLineHeight + (2 * margin);\r\n\r\n            var svgElement = d3.select(elementId)\r\n                .attr(\"width\", chartOverallWidth)\r\n                .attr(\"height\", chartOverallHeight)\r\n                .call(responsivefy);\r\n\r\n\r\n            function getRaceName(raceId) {\r\n                return data.races.find(r => r.id === raceId).shortName;\r\n            }\r\n\r\n            function onMouseOver(d) {\r\n                var compId = d.competitorId || d.id;\r\n                svgElement\r\n                    .selectAll(\"path.compLine\")\r\n                    .attr(\"opacity\", .4);\r\n                svgElement\r\n                    .selectAll(\"path[data-compId='\" + compId + \"']\")\r\n                    .attr(\"stroke-width\", 4)\r\n                    .attr(\"opacity\", 1);\r\n                svgElement\r\n                    .selectAll(\"g.legendEntry\")\r\n                    .attr(\"opacity\", .4);\r\n                svgElement\r\n                    .selectAll(\"g.legendEntry[data-compId='\" + compId + \"']\")\r\n                    .attr(\"opacity\", 1);\r\n                svgElement\r\n                    .selectAll(\"g.legendEntry[data-compId='\" + compId + \"'] rect\")\r\n                    .attr(\"stroke\", (c) => color(c.id));\r\n                svgElement.selectAll(\"circle\")\r\n                    .attr(\"opacity\", .4);\r\n                svgElement\r\n                    .selectAll(\"circle[data-compId='\" + compId + \"']\")\r\n                    .attr(\"opacity\", 1);\r\n\r\n            }\r\n            function onMouseOverRace(d) {\r\n                tooltipGroup\r\n                    .attr(\"transform\", \"translate(\" + xScale(getDate(d, data)) + \",\"\r\n                        + (getY(d, data) - legendLineHeight) + \")\")\r\n                    .attr(\"opacity\", 1)\r\n                    .select(\"text\")\r\n                    .selectAll(\"*\")\r\n                    .remove();\r\n                tooltipGroup\r\n                    .select(\"text\")\r\n                    .append(\"tspan\")\r\n                    .text(getRaceName(d.raceId));\r\n                tooltipGroup\r\n                    .select(\"text\")\r\n                    .append(\"tspan\")\r\n                    .attr(\"x\", 5)\r\n                    .attr(\"y\", (legendLineHeight * 2) - 5)\r\n                    .text(\"Race Score: \" + d.racePlace);\r\n                tooltipGroup\r\n                    .select(\"text\")\r\n                    .append(\"tspan\")\r\n                    .attr(\"x\", 5)\r\n                    .attr(\"y\", (legendLineHeight * 3) - 5)\r\n                    .text(\"Series Score: \" + d.seriesPoints);\r\n                onMouseOver(d);\r\n\r\n            }\r\n            function onMouseOut(d) {\r\n                svgElement\r\n                    .selectAll(\"path.compLine\")\r\n                    .attr(\"stroke-width\", 1.5);\r\n                svgElement\r\n                    .selectAll(\"path.compLine\")\r\n                    .attr(\"opacity\", 1);\r\n                svgElement\r\n                    .selectAll(\"g.legendEntry rect\")\r\n                    .attr(\"stroke\", \"none\");\r\n                tooltipGroup\r\n                    .attr(\"opacity\", 0)\r\n                    .attr(\"transform\", \"translate(\" + chartOverallWidth + \",\"\r\n                        + chartOverallHeight + \")\");\r\n\r\n                svgElement\r\n                    .selectAll(\"path.compLine\")\r\n                    .attr(\"opacity\", 1);\r\n                svgElement\r\n                    .selectAll(\"g.legendEntry\")\r\n                    .attr(\"opacity\", 1);\r\n                svgElement.selectAll(\"circle\")\r\n                    .attr(\"opacity\", 1);\r\n            }\r\n\r\n\r\n            var legend = d3.select(elementId)\r\n                .selectAll(\"g.legendEntry\")\r\n                .attr(\"transform\", \"translate(\" + (chartOverallWidth - legendWidth) + \",\" + (margin + legendMargin) + \")\")\r\n                .data(data.competitors)\r\n                .enter()\r\n                .append(\"g\")\r\n                .attr(\"class\", \"legendEntry\")\r\n                .attr(\"data-compId\", d => d.id)\r\n                .attr(\"transform\", function (d, i) {\r\n                    var x = chartOverallWidth - legendWidth;\r\n                    var y = (i * legendLineHeight) + legendMargin + 20;\r\n                    return 'translate(' + x + ',' + y + ')';\r\n                }\r\n                )\r\n                .attr(\"opacity\", 1)\r\n                .on(\"mouseover\", onMouseOver)\r\n                .on(\"mouseout\", onMouseOut);\r\n            legend.append(\"rect\")\r\n                .attr(\"width\", legendWidth - 1)\r\n                .attr(\"height\", legendLineHeight)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke-width\", 2);\r\n            legend.append(\"rect\")\r\n                .attr('width', 20 - legendMargin)\r\n                .attr('height', legendLineHeight - 2 * legendMargin)\r\n                .attr(\"x\", legendMargin)\r\n                .attr(\"y\", legendMargin)\r\n                .style('fill', (c) => color(c.id))\r\n                .style('stroke-width', 0);\r\n            legend.append('text')\r\n                .attr('x', 20 + legendMargin)\r\n                .attr(\"y\", legendLineHeight - 4)\r\n                .style(\"font-size\", \"11px\")\r\n                .text(function (d) { return d.name; });\r\n\r\n            var xAxis = d3.axisTop().scale(xScale);\r\n            var language = d3.select(\"html\").attr(\"lang\").substring(0, 2);\r\n            if (((minDate - maxDate) < (10 * 24 * 60 * 60 * 1000)) || language !== \"en\") {\r\n                xAxis = xAxis.tickFormat(\"\");\r\n            }\r\n            svgElement.append(\"g\").attr(\"id\", \"xAxisG\")\r\n                .attr(\"transform\", \"translate(0,20)\").call(xAxis);\r\n\r\n            var lineData = d3.line()\r\n                .x(d => xScale(getDate(d, data)))\r\n                .y(d => getY(d, data));\r\n\r\n            svgElement\r\n                .selectAll(\"path.compLine\")\r\n                .data(data.competitors)\r\n                .enter()\r\n                .append(\"path\")\r\n                .attr(\"class\", \"compLine\")\r\n                .attr(\"d\", d => lineData(data.entries.filter(e => e.competitorId === d.id)))\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"opacity\", 1)\r\n                .attr(\"stroke\", d => color(d.id))\r\n                .attr(\"stroke-width\", 1)\r\n                .attr(\"stroke-linejoin\", \"round\")\r\n                .attr(\"stroke-linecap\", \"round\")\r\n                .attr(\"data-compId\", d => d.id)\r\n                .on(\"mouseover\", onMouseOver)\r\n                .on(\"mouseout\", onMouseOut);\r\n\r\n            svgElement.selectAll(\"circle\")\r\n                .data(data.entries)\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"r\", 3)\r\n                .attr(\"cy\", d => getY(d, data))\r\n                .attr(\"cx\", d => xScale(getDate(d, data)))\r\n                .attr(\"data-compId\", d => d.competitorId)\r\n                .attr(\"fill\", d => color(d.competitorId))\r\n                .on(\"mouseover\", onMouseOverRace)\r\n                .on(\"mouseout\", onMouseOut);\r\n\r\n            var tooltipGroup = svgElement\r\n                .append(\"g\")\r\n                .attr(\"opacity\", 0);\r\n            tooltipGroup.append(\"rect\")\r\n                .attr(\"width\", 120)\r\n                .attr(\"height\", legendLineHeight * 3)\r\n                .attr(\"fill\", \"white\")\r\n                .attr(\"fill-opacity\", \".7\");\r\n            tooltipGroup.append(\"text\")\r\n                .attr('x', 5)\r\n                .attr(\"y\", legendLineHeight - 5)\r\n                .style(\"font-size\", \"11px\");\r\n\r\n        }\r\n    }\r\n    return {\r\n        drawChart: drawChart\r\n    };\r\n\r\n})();"],"names":["chartOverallHeight","charts","document","getElementsByClassName","i","length","drawChart","dataset","seriesId","id","elementId","minDate","maxDate","dataPath","getDate","result","allData","thisRace","races","find","r","raceId","racesThisDate","filter","date","order","findIndex","Date","getTime","getY","maxScore","Math","max","entries","e","map","seriesPoints","minScore","min","minNonnullScore","ratio","isLowPoints","isNaN","responsivefy","svg","container","d3","select","node","parentNode","width","parseInt","style","height","aspect","resize","targetWidth","attr","round","call","window","on","json","then","data","dates","apply","setDate","xScale","scaleTime","domain","range","chartOverallWidth","color","scaleOrdinal","schemeDark2","competitors","svgElement","legend","selectAll","enter","append","d","onMouseOver","onMouseOut","legendWidth","legendLineHeight","c","text","name","xAxis","axisTop","scale","language","substring","tickFormat","lineData","line","x","y","competitorId","tooltipGroup","remove","shortName","racePlace","compId"],"sourceRoot":""}