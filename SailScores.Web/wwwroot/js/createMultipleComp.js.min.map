{"version":3,"file":"createMultipleComp.js","mappings":"MAAA,IACQA,EAuCR,SAASC,EAAoBC,EAAKC,GAC9B,IAAIH,EAAaI,SAASC,eAAe,kBACrCC,EAAc,cAAiBJ,EAAM,KACrCK,EAAWH,SAASI,iBAAiBF,GACzC,IAAKC,GAAgC,IAApBA,EAASE,OAAc,CACpC,GAAIT,EAAWQ,iBAAiB,QAAQC,OAAS,IAE7C,MADAC,MAAM,gDACA,uBAGV,OASR,WACI,IAAIC,EAAW,EACXX,EAAaI,SAASC,eAAe,kBAGrCO,EAFeR,SAASC,eAAe,mBAEXQ,WAAU,IAG1CF,EAAWX,EAAWQ,iBAAiB,QAAQC,OAAS,GACzC,IAAGE,EAAW,GAC7B,IAAIG,EAAa,eAAiBH,EAAW,KAEzCI,EAAOH,EAAaJ,iBAAiB,qCAAqC,GAC9EO,EAAKC,KAAOF,EAAa,aACzBC,EAAKE,QAAQd,OAAS,EACtBY,EAAKE,QAAQf,IAAMS,EAEnB,IAAIK,EAAOJ,EAAaJ,iBAAiB,+BAA+B,GACxEQ,EAAKA,KAAOF,EAAa,OACzBE,EAAKC,QAAQd,OAAS,EACtBa,EAAKC,QAAQf,IAAMS,EAEnB,IAAIO,EAAON,EAAaJ,iBAAiB,mCAAmC,GAC5EU,EAAKF,KAAOF,EAAa,WACzBI,EAAKD,QAAQd,OAAS,EACtBe,EAAKD,QAAQf,IAAMS,EAEnB,IAAIQ,EAAOP,EAAaJ,iBAAiB,uCAAuC,GAChFW,EAAKH,KAAOF,EAAa,eACzBK,EAAKF,QAAQd,OAAS,EACtBgB,EAAKF,QAAQf,IAAMS,EAEnBC,EAAaQ,MAAMC,QAAU,GAC7BrB,EAAWsB,YAAYV,GAEvBG,EAAKQ,OACT,CA9CQC,GACOvB,EAAoBC,EAAKC,EACpC,CACA,IAAIsB,EAAkBnB,EAAc,iBAAoBH,EAAS,KAC7DuB,EAAetB,SAASI,iBAAiBiB,GAC7C,IAAKC,GAAgBA,EAAajB,OAAS,EACvC,KAAM,yBAEV,OAAOiB,EAAa,EACxB,CAzDQ1B,EAAaI,SAASuB,kBAAkB,uBAAuB,IACnE3B,EAAaI,SAASC,eAAe,qBAEjCL,EAAW4B,QAAU,SAAUC,GAI3B,IAFA,IACIC,EADWD,EAAME,cAAcC,QAAQ,cACnBC,MAAMC,OAAOC,aAAa,KACzCC,EAAI,EAAGA,EAAIN,EAASrB,OAAQ2B,IACjCN,EAASM,GAAKN,EAASM,GAAGH,MAAMC,OAAOC,aAAa,IAExD,GAAwB,IAApBL,EAASrB,QAAuC,IAAvBqB,EAAS,GAAGrB,OAAzC,CAIAoB,EAAMQ,iBAEN,IAAIC,EAAcC,OAAOV,EAAMW,OAAOvB,QAAQd,SAAW,EACrDsC,EAAWF,OAAOV,EAAMW,OAAOvB,QAAQf,MAAQ,EAGnD,IAAKkC,EAAI,EAAGA,EAAIN,EAASrB,OAAQ2B,IAC7B,IAAK,IAAIM,EAAI,EAAGA,EAAIZ,EAASM,GAAG3B,OAAQiC,IAChCJ,EAAcI,EAAI,IAClBzC,EAAoBwC,EAAWL,EAAGE,EAAcI,GAAGC,MAAQb,EAASM,GAAGM,IAKnFb,EAAMe,kBACNf,EAAMQ,gBAjBN,CAkBJ,GAEWjC,SAASC,eAAe,eAC9BwC,QAAU,SAAUhB,GACrBiB,EAAE,oBAAoBC,MAC9B,C","sources":["webpack://asp.net/./wwwroot/js/createMultipleComp.js"],"sourcesContent":["(function () {\r\n    var allCompDiv = document.getElementsByName(\"competitors[0].Name\")[0];\r\n    allCompDiv = document.getElementById('allCompetitors');\r\n    if (allCompDiv) {\r\n        allCompDiv.onpaste = function (event) {\r\n\r\n            var clipText = event.clipboardData.getData('text/plain');\r\n            var clipRows = clipText.split(String.fromCharCode(13));\r\n            for (var i = 0; i < clipRows.length; i++) {\r\n                clipRows[i] = clipRows[i].split(String.fromCharCode(9));\r\n            }\r\n            if (clipRows.length === 1 && clipRows[0].length === 1) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n            //get starting position:\r\n            var startColumn = Number(event.target.dataset.column) || 0;\r\n            var startRow = Number(event.target.dataset.row) || 0;\r\n\r\n            // paste the array:\r\n            for (i = 0; i < clipRows.length; i++) {\r\n                for (var j = 0; j < clipRows[i].length; j++) {\r\n                    if (startColumn + j < 4) {\r\n                        getInputAtRowColumn(startRow + i, startColumn + j).value = clipRows[i][j];\r\n                    }\r\n                }\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        };\r\n    };\r\n    var closeBox = document.getElementById(\"closebutton\");\r\n    closeBox.onclick = function (event) {\r\n            $(\"#compCreateAlert\").hide();\r\n    }\r\n\r\n})();\r\n\r\nfunction getInputAtRowColumn(row, column) {\r\n    var allCompDiv = document.getElementById(\"allCompetitors\");\r\n    var rowSelector = \"[data-row=\\\"\" + row + \"\\\"]\";\r\n    var rowArray = document.querySelectorAll(rowSelector);\r\n    if (!rowArray || rowArray.length === 0) {\r\n        if (allCompDiv.querySelectorAll(\".row\").length > 102) {\r\n            alert(\"Only 100 competitors can be added at a time.\");\r\n            throw \"Too many rows added.\";\r\n        }\r\n        addNewRow();\r\n        return getInputAtRowColumn(row, column);\r\n    }\r\n    var elementSelector = rowSelector + \"[data-column=\\\"\" + column + \"\\\"]\";\r\n    var elementArray = document.querySelectorAll(elementSelector);\r\n    if (!elementArray || elementArray.length < 1) {\r\n        throw \"Problem finding input.\";\r\n    }\r\n    return elementArray[0];\r\n}\r\nfunction addNewRow() {\r\n    var rowIndex = 0;\r\n    var allCompDiv = document.getElementById(\"allCompetitors\");\r\n    var compTemplate = document.getElementById(\"compRowTemplate\");\r\n\r\n    var compListItem = compTemplate.cloneNode(true);\r\n\r\n    //subtract two, don't count template or header row\r\n    rowIndex = allCompDiv.querySelectorAll(\".row\").length - 2;\r\n    if (rowIndex < 0) rowIndex = 0;\r\n    var namePrefix = \"competitors[\" + rowIndex + \"].\";\r\n\r\n    var sail = compListItem.querySelectorAll('input[name=\"template.SailNumber\"]')[0];\r\n    sail.name = namePrefix + \"SailNumber\";\r\n    sail.dataset.column = 0;\r\n    sail.dataset.row = rowIndex;\r\n\r\n    var name = compListItem.querySelectorAll('input[name=\"template.Name\"]')[0];\r\n    name.name = namePrefix + \"Name\";\r\n    name.dataset.column = 1;\r\n    name.dataset.row = rowIndex;\r\n\r\n    var boat = compListItem.querySelectorAll('input[name=\"template.BoatName\"]')[0];\r\n    boat.name = namePrefix + \"BoatName\";\r\n    boat.dataset.column = 2;\r\n    boat.dataset.row = rowIndex;\r\n\r\n    var club = compListItem.querySelectorAll('input[name=\"template.HomeClubName\"]')[0];\r\n    club.name = namePrefix + \"HomeClubName\";\r\n    club.dataset.column = 3;\r\n    club.dataset.row = rowIndex;\r\n\r\n    compListItem.style.display = \"\";\r\n    allCompDiv.appendChild(compListItem);\r\n\r\n    sail.focus();\r\n}"],"names":["allCompDiv","getInputAtRowColumn","row","column","document","getElementById","rowSelector","rowArray","querySelectorAll","length","alert","rowIndex","compListItem","cloneNode","namePrefix","sail","name","dataset","boat","club","style","display","appendChild","focus","addNewRow","elementSelector","elementArray","getElementsByName","onpaste","event","clipRows","clipboardData","getData","split","String","fromCharCode","i","preventDefault","startColumn","Number","target","startRow","j","value","stopPropagation","onclick","$","hide"],"sourceRoot":""}