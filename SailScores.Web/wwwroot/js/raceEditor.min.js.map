{"version":3,"file":"raceEditor.min.js","mappings":"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","sources":["webpack://asp.net/webpack/bootstrap","webpack://asp.net/webpack/runtime/compat get default export","webpack://asp.net/webpack/runtime/define property getters","webpack://asp.net/webpack/runtime/hasOwnProperty shorthand","webpack://asp.net/external var \"jQuery\"","webpack://asp.net/external var \"bootstrap\"","webpack://asp.net/./wwwroot/js/raceEditor.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = jQuery;","const __WEBPACK_NAMESPACE_OBJECT__ = bootstrap;","/// <reference path=\"../node_modules/devbridge-autocomplete/typings/jquery-autocomplete/jquery.autocomplete.d.ts\" />\n/// <reference types=\"jquery\" />\n/// <reference types=\"select2\" />\nimport $ from \"jquery\";\nimport \"bootstrap\";\nconst noCodeString = \"No Code\";\nfunction checkEnter(e) {\n    const ev = e || event;\n    let txtArea = /textarea/i.test(ev.srcElement.tagName);\n    return txtArea || (e.keyCode || e.which || e.charCode || 0) !== 13;\n}\nexport function initialize() {\n    document.querySelector('form').onkeypress = checkEnter;\n    $('#fleetId').change(loadFleet);\n    if ($(\"#defaultRaceDateOffset\").val() == \"\") {\n        $('#date').val('');\n    }\n    else if ($('#needsLocalDate').val() === \"True\") {\n        let now = new Date();\n        const selectedDate = new Date($('#date').val());\n        const tomorrow = new Date(now);\n        tomorrow.setDate(now.getDate() + 1);\n        const yesterday = new Date(now);\n        yesterday.setDate(now.getDate() - 1);\n        if (selectedDate > yesterday &&\n            selectedDate < tomorrow) {\n            const offset = Number.parseInt($(\"#defaultRaceDateOffset\").val(), 10);\n            now.setDate(now.getDate() + offset);\n            now.setMinutes(now.getMinutes() - now.getTimezoneOffset());\n            $('#date').val(now.toISOString().substring(0, 10));\n        }\n        $('#needsLocalDate').val('');\n    }\n    $('#date').change(dateChanged);\n    $('#results input[name=\"FinishTime\"]').change(onFinishTimeChanged);\n    $('#results input[name=\"ElapsedTime\"]').change(onElapsedTimeChanged);\n    $('#raceState').data(\"previous\", $('#raceState').val());\n    $('#raceState').change(raceStateChanged);\n    $('.weather-input').change(weatherChanged);\n    $('#results').on('click', '.select-code', calculatePlaces);\n    $('#results').on('click', '.move-up', moveUp);\n    $('#results').on('click', '.move-down', moveDown);\n    $('#results').on('click', '.delete-button', confirmDelete);\n    $('#scoreButtonDiv').on('click', '.add-comp-enabled', addNewCompetitorFromButton);\n    $('#deleteConfirmed').click(deleteResult);\n    $('#closefooter').click(hideScoreButtonFooter);\n    $('#compform').submit(compCreateSubmit);\n    $(\"#raceform\").submit(function (e) {\n        let waiting = $('#ssWaitingModal');\n        if (!!waiting) {\n            waiting.show();\n        }\n        $('#submitButton').attr('value', 'Please wait...');\n        let form = document.getElementById(\"raceform\");\n        $('#submitButton').attr('disabled', 'disabled');\n        addScoresFieldsToForm(form);\n    });\n    $(\"#submitButton\").prop(\"disabled\", false);\n    $(\"#submitDisabledMessage\").prop(\"hidden\", true);\n    RequestAuthorizationToken(null);\n    window.onload = function () {\n        loadFleet();\n        loadSeriesOptions();\n        calculatePlaces();\n    };\n    // TrackTimes dynamic show/hide\n    const trackTimesCheckbox = document.getElementById(\"trackTimesCheckbox\");\n    if (trackTimesCheckbox) {\n        function updateTimingFields() {\n            toggleTimingFields(trackTimesCheckbox.checked);\n            updateAllScoreTimesForStartTimeChange();\n        }\n        trackTimesCheckbox.addEventListener(\"change\", updateTimingFields);\n        // Initial state\n        updateTimingFields();\n    }\n    // Update all score times if race start time changes and TrackTimes is enabled\n    const startTimeInput = document.getElementById('StartTime');\n    if (startTimeInput) {\n        startTimeInput.addEventListener('change', function () {\n            updateAllScoreTimesForStartTimeChange();\n        });\n    }\n}\nexport function loadSeriesOptions() {\n    let clubId = $(\"#clubId\").val();\n    let dateStr = $(\"#date\").val();\n    getSeries(clubId, dateStr);\n}\nexport function loadFleet() {\n    let clubId = $(\"#clubId\").val();\n    let fleetId = $(\"#fleetId\").val();\n    let sel = document.getElementById('fleetId');\n    let option = sel.options[sel.selectedIndex];\n    let boatClassId = option.getAttribute('data-boat-class-id');\n    if (boatClassId) {\n        $(\"#createCompBoatClassSelect\").val(boatClassId);\n    }\n    if (fleetId.length < 30) {\n        $(\"#createCompButton\").prop('disabled', true);\n    }\n    else {\n        $(\"#createCompButton\").prop('disabled', false);\n    }\n    $(\"#createCompFleetId\").val(fleetId);\n    getCompetitors(clubId, fleetId);\n    displayRaceNumber();\n}\nexport function dateChanged() {\n    loadSeriesOptions();\n    if ($(\"#defaultWeather\").val() === \"true\") {\n        console.log(\"defaultWeather was true\");\n        clearWeatherFields();\n    }\n    displayRaceNumber();\n}\nexport function weatherChanged() {\n    $(\"#defaultWeather\").val(\"false\");\n}\nexport function raceStateChanged() {\n    let state = $(\"#raceState\").val();\n    if (state === \"2\") {\n        clearWeatherFields();\n    }\n    if (state === \"1\" && $(\"#raceState\").data(\"previous\") !== \"4\") {\n        populateEmptyWeatherFields();\n    }\n    $(\"#raceState\").data(\"previous\", state);\n}\nexport function compCreateSubmit(e) {\n    e.preventDefault();\n    $(\"#compLoading\").show();\n    let form = $(this);\n    let url = form.attr(\"data-submit-url\");\n    let prep = function (xhr) {\n        $('#compLoading').show();\n        xhr.setRequestHeader(\"RequestVerificationToken\", $('input:hidden[name=\"__RequestVerificationToken\"]').val());\n    };\n    $.ajax({\n        type: \"POST\",\n        url: url,\n        beforeSend: prep,\n        data: form.serialize(), // serializes the form's elements.\n        success: completeCompCreate,\n        error: completeCompCreateFailed\n    });\n    $(\"#compLoading\").hide();\n    return false;\n}\nexport function completeCompCreate() {\n    let clubId = $(\"#clubId\").val();\n    let fleetId = $(\"#fleetId\").val();\n    getCompetitors(clubId, fleetId);\n    let modal = $(\"#createCompetitor\");\n    modal.modal(\"hide\");\n}\nexport function completeCompCreateFailed() {\n    $(\"#compCreateAlert\").show();\n}\nexport function hideAlert() {\n    $(\"#compCreateAlert\").hide();\n}\nexport function moveUp() {\n    let btn = event.target;\n    let resultItem = $(btn).closest(\"li\");\n    // move up:\n    resultItem.prev().insertAfter(resultItem);\n    calculatePlaces();\n}\nexport function moveDown() {\n    let btn = event.target;\n    let resultItem = $(btn).closest(\"li\");\n    resultItem.next().insertBefore(resultItem);\n    calculatePlaces();\n}\nexport function deleteResult() {\n    // fix aria incompatibility.\n    const buttonElement = document.activeElement;\n    buttonElement.blur();\n    let modal = $(\"#deleteConfirm\");\n    let compId = modal.find(\"#compIdToDelete\").val();\n    let resultList = $(\"#results\");\n    let resultItem = resultList.find(`[data-competitorid='${compId}']`);\n    resultItem.remove();\n    calculatePlaces();\n    initializeAutoComplete();\n    updateButtonFooter();\n    modal.modal(\"hide\");\n}\nexport function confirmDelete() {\n    let btn = event.target;\n    let resultItem = $(btn).closest(\"li\");\n    let compId = resultItem.data('competitorid');\n    let compName = resultItem.find(\".competitor-name\").text();\n    if (!compName) {\n        compName = resultItem.find(\".sail-number\").text();\n    }\n    let modal = $('#deleteConfirm');\n    modal.find('#competitorNameToDelete').text(compName);\n    modal.find('#compIdToDelete').val(compId);\n    modal.show();\n}\nexport function hideScoreButtonFooter() {\n    $('#scoreButtonFooter').hide();\n}\nexport function addNewCompetitorFromButton() {\n    if (!(event.target instanceof HTMLButtonElement)) {\n        return;\n    }\n    let competitorId = event.target.dataset['competitorid'];\n    let comp = allCompetitors.find(c => c.id.toString() === competitorId);\n    addNewCompetitor(comp);\n}\nfunction addNewCompetitor(competitor) {\n    let c = 0;\n    let resultDiv = document.getElementById(\"results\");\n    let compTemplate = document.getElementById(\"competitorTemplate\");\n    let compListItem = compTemplate.cloneNode(true);\n    compListItem.id = competitor.id.toString();\n    compListItem.setAttribute(\"data-competitorId\", competitor.id.toString());\n    let span = compListItem.getElementsByClassName(\"competitor-name\")[0];\n    span.appendChild(document.createTextNode(competitor.name || \"\"));\n    span = compListItem.getElementsByClassName(\"sail-number\")[0];\n    span.appendChild(document.createTextNode(competitor.sailNumber || \"\"));\n    if (competitor.alternativeSailNumber) {\n        span = compListItem.getElementsByClassName(\"alt-sail-number\")[0];\n        span.appendChild(document.createTextNode(\" (\" + competitor.alternativeSailNumber + \")\"));\n        span.style.display = \"\";\n    }\n    span = compListItem.getElementsByClassName(\"race-place\")[0];\n    span.appendChild(document.createTextNode(c.toString()));\n    let deleteButtons = compListItem.getElementsByClassName(\"delete-button\");\n    for (let i = 0; i < deleteButtons.length; i++) {\n        deleteButtons[i].setAttribute(\"data-competitorId\", competitor.id.toString());\n    }\n    // Always add timing fields, but set display based on TrackTimes checkbox\n    let trackTimesChecked = document.getElementById(\"trackTimesCheckbox\")?.checked;\n    let finishDiv = compListItem.getElementsByClassName(\"finish-time-div\")[0];\n    let finishInput = compListItem.getElementsByClassName(\"finish-time-input\")[0];\n    finishDiv.style.display = trackTimesChecked ? \"\" : \"none\";\n    let elapsedDiv = compListItem.getElementsByClassName(\"elapsed-time-div\")[0];\n    let elapsedInput = compListItem.getElementsByClassName(\"elapsed-time-input\")[0];\n    elapsedDiv.style.display = trackTimesChecked ? \"\" : \"none\";\n    // Set FinishTime and ElapsedTime if race date matches client date\n    const raceDateStr = $(\"#date\").val();\n    const now = new Date();\n    const nowDateStr = now.toISOString().substring(0, 10);\n    if (raceDateStr === nowDateStr && trackTimesChecked) {\n        // Set FinishTime to current time (HH:mm:ss)\n        finishInput.value = now.toTimeString().slice(0, 8);\n        // If StartTime is set, calculate elapsed time\n        const startTimeInput = document.getElementById('StartTime');\n        if (startTimeInput?.value) {\n            const start = parseTimeStringToDate(startTimeInput.value);\n            if (start) {\n                // Use today's date for both start and finish\n                const finish = new Date(now);\n                // If start is after finish (crossed midnight), adjust start to yesterday\n                if (start > finish) {\n                    start.setDate(start.getDate() - 1);\n                }\n                let elapsedMs = finish.getTime() - start.getTime();\n                if (elapsedMs < 0)\n                    elapsedMs += 24 * 3600 * 1000; // handle midnight wrap\n                elapsedInput.value = formatElapsedTime(elapsedMs);\n            }\n        }\n    }\n    // Attach event handlers to new FinishTime and ElapsedTime fields\n    if (finishInput) {\n        $(finishInput).change(onFinishTimeChanged);\n    }\n    if (elapsedInput) {\n        $(elapsedInput).change(onElapsedTimeChanged);\n    }\n    compListItem.style.display = \"\";\n    // in testing, due to delay in speech recog, could add competitor\n    // twice.Trying to reduce that here.\n    if (!competitorIsInResults(competitor)) {\n        resultDiv.appendChild(compListItem);\n    }\n    else {\n        return;\n    }\n    calculatePlaces();\n    $('html, body').animate({\n        scrollTop: $(compListItem).offset().top - 150\n    }, 300);\n    $('#newCompetitor').val(\"\");\n    initializeAutoComplete();\n    updateButtonFooter();\n}\nfunction addScoresFieldsToForm(form) {\n    //clear out old fields first:\n    removeScoresFieldsFromForm(form);\n    let resultList = document.getElementById(\"results\");\n    let resultItems = resultList.getElementsByTagName(\"li\");\n    for (let i = 1; i < resultItems.length; i++) {\n        const listIndex = (i - 1).toString();\n        let input = document.createElement(\"input\");\n        input.type = \"hidden\";\n        input.name = \"Scores[\" + listIndex + \"].competitorId\";\n        input.value = resultItems[i].getAttribute(\"data-competitorId\");\n        form.appendChild(input);\n        input = document.createElement(\"input\");\n        input.type = \"hidden\";\n        input.name = \"Scores[\" + listIndex + \"].place\";\n        if (shouldCompKeepScore(resultItems[i])) {\n            input.value = resultItems[i].getAttribute(\"data-place\");\n        }\n        form.appendChild(input);\n        input = document.createElement(\"input\");\n        input.type = \"hidden\";\n        input.name = \"Scores[\" + listIndex + \"].code\";\n        input.value = getCompetitorCode(resultItems[i]);\n        form.appendChild(input);\n        input = document.createElement(\"input\");\n        input.type = \"hidden\";\n        input.name = \"Scores[\" + listIndex + \"].codePointsString\";\n        input.value = getCompetitorCodePoints(resultItems[i]);\n        form.appendChild(input);\n        // Add FinishTime and ElapsedTime if present\n        let finishInput = resultItems[i].querySelector('input[name=\"FinishTime\"]');\n        if (finishInput?.value) {\n            input = document.createElement(\"input\");\n            input.type = \"hidden\";\n            input.name = \"Scores[\" + listIndex + \"].FinishTime\";\n            input.value = finishInput.value;\n            form.appendChild(input);\n        }\n        let elapsedInput = resultItems[i].querySelector('input[name=\"ElapsedTime\"]');\n        if (elapsedInput?.value) {\n            input = document.createElement(\"input\");\n            input.type = \"hidden\";\n            input.name = \"Scores[\" + listIndex + \"].ElapsedTime\";\n            input.value = elapsedInput.value;\n            form.appendChild(input);\n        }\n    }\n}\nfunction removeScoresFieldsFromForm(form) {\n    $(form).find(\"[name^=Scores]\").remove();\n}\nexport function calculatePlaces() {\n    let resultList = document.getElementById(\"results\");\n    let resultItems = resultList.getElementsByTagName(\"li\");\n    let scoreCount = 1;\n    for (let i = 1, len = resultItems.length; i < len; i++) {\n        let span = resultItems[i].getElementsByClassName(\"race-place\")[0];\n        resultItems[i].setAttribute(\"data-place\", i.toString());\n        let origScore = resultItems[i].getAttribute(\"data-originalScore\");\n        if (span.id !== \"competitorTemplate\") {\n            if (shouldCompKeepScore(resultItems[i]) &&\n                origScore !== \"0\") {\n                span.textContent = (scoreCount).toString();\n                resultItems[i].setAttribute(\"data-place\", scoreCount.toString());\n                scoreCount++;\n            }\n            else {\n                span.textContent = getCompetitorCode(resultItems[i]);\n                resultItems[i].removeAttribute(\"data-place\");\n            }\n        }\n        // show manual entry if needed\n        let codepointsinput = resultItems[i].getElementsByClassName(\"code-points\")[0];\n        if (shouldHaveManualEntry(resultItems[i])) {\n            codepointsinput.style.display = \"\";\n        }\n        else {\n            codepointsinput.style.display = \"none\";\n            codepointsinput.value = \"\";\n        }\n    }\n}\nfunction competitorIsInResults(comp) {\n    let resultList = document.getElementById(\"results\");\n    let resultItems = resultList.getElementsByTagName(\"li\");\n    for (let i = 0, len = resultItems.length; i < len; i++) {\n        if (resultItems[i].getAttribute(\"data-competitorId\")\n            === comp.id.toString()) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getSuggestions() {\n    const competitorSuggestions = [];\n    allCompetitors.forEach(c => {\n        if (!competitorIsInResults(c)) {\n            let comp = {\n                value: c.name,\n                data: c\n            };\n            if (c.alternativeSailNumber) {\n                comp.value = c.sailNumber + \" ( \" +\n                    c.alternativeSailNumber + \" ) - \" + c.name;\n            }\n            else if (c.sailNumber) {\n                comp.value = c.sailNumber + ' - ' + c.name;\n            }\n            competitorSuggestions.push(comp);\n        }\n    });\n    return competitorSuggestions;\n}\nlet allCompetitors;\nlet competitorSuggestions;\nfunction getCompetitors(clubId, fleetId) {\n    if ($ && clubId && fleetId && fleetId.length > 31) {\n        $.getJSON(\"/api/Competitors\", {\n            clubId: clubId,\n            fleetId: fleetId\n        }, function (data) {\n            allCompetitors = data;\n            initializeAutoComplete();\n            initializeButtonFooter();\n        });\n    }\n}\nfunction displayRaceNumber() {\n    let raceNumElement = document.getElementById('raceNumber');\n    if (raceNumElement == null) {\n        return;\n    }\n    let clubId = $(\"#clubId\").val();\n    let fleetId = $(\"#fleetId\").val();\n    let regattaId = $(\"#regattaId\").val();\n    let raceDate = $(\"#date\").val();\n    if ($ && clubId && fleetId && raceDate && fleetId.length >= 32) {\n        $.getJSON(\"/api/Races/RaceNumber\", {\n            clubId: clubId,\n            fleetId: fleetId,\n            raceDate: raceDate,\n            regattaId: regattaId\n        }, function (data) {\n            if (data?.order) {\n                raceNumElement.textContent = data.order.toString();\n            }\n            else {\n                raceNumElement.textContent = \"\";\n            }\n        });\n    }\n}\nlet seriesOptions;\nfunction getSeries(clubId, date) {\n    if (clubId && date) {\n        $.getJSON(\"/api/Series\", {\n            clubId: clubId,\n            date: date\n        }, function (data) {\n            seriesOptions = data;\n            setSeries();\n        });\n    }\n}\nfunction setSeries() {\n    let seriesSelect = $('#SeriesIds');\n    // Save current selections as an array of strings\n    let selectedSeriesValues = seriesSelect.val() || [];\n    // Destroy existing Select2 instance to avoid duplicates\n    if (seriesSelect.hasClass(\"select2-hidden-accessible\")) {\n        seriesSelect.select2('destroy');\n    }\n    // Remove options\n    seriesSelect.empty();\n    // Add options\n    $.each(seriesOptions, function (_key, value) {\n        let series = value;\n        seriesSelect.append($(\"<option></option>\")\n            .attr(\"value\", series.id.toString())\n            .text(series.name));\n    });\n    // Re-initialize Select2 with multi-select enabled\n    seriesSelect.select2({\n        width: '100%',\n        placeholder: \"Select Series\",\n        allowClear: true\n    });\n    // Restore previous selections (if still present)\n    seriesSelect.val(selectedSeriesValues).trigger('change');\n}\nlet autoCompleteSetup = false;\nfunction initializeAutoComplete() {\n    competitorSuggestions = getSuggestions();\n    if (autoCompleteSetup) {\n        $('#newCompetitor').autocomplete().dispose();\n    }\n    $('#newCompetitor').autocomplete({\n        lookup: competitorSuggestions,\n        onSelect: function (suggestion) {\n            addNewCompetitor(suggestion.data);\n        },\n        autoSelectFirst: true,\n        triggerSelectOnValidInput: false,\n        noCache: true\n    });\n    autoCompleteSetup = true;\n}\nfunction initializeButtonFooter() {\n    $('#scoreButtonDiv').empty();\n    // used to test length of competitor list and\n    // hide if too long.\n    $('#scoreButtonFooter').show();\n    allCompetitors.forEach(c => {\n        let style = 'btn quick-comp ';\n        if (!competitorIsInResults(c)) {\n            style += 'btn-outline-primary add-comp-enabled';\n        }\n        else {\n            style += 'btn-primary add-comp-disabled';\n        }\n        $('#scoreButtonDiv').append('<button class=\"' + style +\n            '\" data-competitorid=\"' + c.id + '\" > ' +\n            (c.sailNumber || c.alternativeSailNumber || c.name) + ' </button>');\n    });\n}\nfunction updateButtonFooter() {\n    $('#scoreButtonDiv').empty();\n    allCompetitors.forEach(c => {\n        let style = 'btn quick-comp ';\n        if (!competitorIsInResults(c)) {\n            style += 'btn-outline-primary add-comp-enabled';\n        }\n        else {\n            style += 'btn-primary add-comp-disabled';\n        }\n        $('#scoreButtonDiv').append('<button class=\"' + style +\n            '\" data-competitorid=\"' + c.id + '\" > ' +\n            (c.sailNumber || c.alternativeSailNumber || c.name) + ' </button>');\n    });\n}\nfunction getCompetitorCode(compListItem) {\n    const codeText = compListItem.getElementsByClassName(\"select-code\")[0].value;\n    if (codeText === noCodeString) {\n        return null;\n    }\n    return codeText;\n}\nfunction getCompetitorCodePoints(compListItem) {\n    const codePoints = compListItem.getElementsByClassName(\"code-points\")[0].value;\n    if (codePoints === noCodeString) {\n        return null;\n    }\n    return codePoints;\n}\nfunction shouldCompKeepScore(compListItem) {\n    const codeText = compListItem.getElementsByClassName(\"select-code\")[0]\n        .value;\n    if (codeText === noCodeString) {\n        return true;\n    }\n    const fullCodeObj = scoreCodes.filter(s => s.name === codeText);\n    return !!(fullCodeObj[0].preserveResult);\n}\nfunction shouldHaveManualEntry(compListItem) {\n    const codeText = compListItem.getElementsByClassName(\"select-code\")[0]\n        .value;\n    if (codeText === noCodeString) {\n        return false;\n    }\n    const fullCodeObj = scoreCodes.filter(s => s.name === codeText);\n    return (fullCodeObj[0].formula === \"MAN\");\n}\nfunction clearWeatherFields() {\n    $(\"#weatherIcon\").val(\"Select...\");\n    //$(\"#weatherIcon\").selectpicker(\"refresh\");\n    $(\"#weatherDescription\").val(null);\n    $(\"#windSpeed\").val(null);\n    $(\"#windGust\").val(null);\n    $(\"#windDirection\").val(null);\n    $(\"#temperature\").val(null);\n    $(\"#humidity\").val(null);\n    $(\"#cloudcover\").val(null);\n}\nfunction populateEmptyWeatherFields() {\n    let initials = $(\"#clubInitials\").val();\n    $.getJSON(\"/\" + initials + \"/weather/current/\", {}, function (data) {\n        if (data.icon && $(\"#weatherIcon\").val(null)) {\n            $(\"#weatherIcon\").val(data.icon);\n            //$(\"#weatherIcon\").selectpicker(\"refresh\");\n        }\n        if (data.description && $(\"#weatherDescription\").val(null)) {\n            $(\"#weatherDescription\").val(data.description);\n        }\n        if (data.windSpeed && $(\"#windSpeed\").val(null)) {\n            $(\"#windSpeed\").val(data.windSpeed);\n        }\n        if (data.windGust && $(\"#windGust\").val(null)) {\n            $(\"#windGust\").val(data.windGust);\n        }\n        if (data.windDirection && $(\"#windDirection\").val(null)) {\n            $(\"#windDirection\").val(data.windDirection);\n        }\n        if (data.temperature && $(\"#temperature\").val(null)) {\n            $(\"#temperature\").val(data.temperature);\n        }\n        if (data.humidity && $(\"#humidity\").val(null)) {\n            $(\"#humidity\").val(data.humidity);\n        }\n        if (data.cloudCoverPercent && $(\"#cloudCover\").val(null)) {\n            $(\"#cloudCover\").val(data.cloudCoverPercent);\n        }\n    });\n}\nfunction toggleTimingFields(show) {\n    // Show or hide all FinishTime and ElapsedTime fields in the score list\n    const display = show ? \"\" : \"none\";\n    $(\"#results li\").each(function () {\n        $(this).find('input[name=\"FinishTime\"]').closest('div').css(\"display\", display);\n        $(this).find('input[name=\"ElapsedTime\"]').closest('div').css(\"display\", display);\n    });\n}\nfunction RequestAuthorizationToken(continuation) {\n    let prep = function (xhr) {\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n    };\n    $.ajax({\n        type: \"GET\",\n        url: window.speechInfoUrl,\n        dataType: \"json\",\n        beforeSend: prep,\n        success: function (data) {\n            failureCount = 0;\n            authorizationToken = data.token;\n            region = data.region;\n            language = data.userLanguage;\n            timeOfLastToken = Date.now();\n            if (continuation) {\n                continuation();\n            }\n        },\n        error: function (xhr, textStatus, errorThrown) {\n            failureCount++;\n            if (failureCount < 3) {\n                $.ajax(this);\n                return;\n            }\n        }\n    });\n}\nfunction updateAllScoreTimesForStartTimeChange() {\n    const trackTimesCheckbox = document.getElementById(\"trackTimesCheckbox\");\n    if (!trackTimesCheckbox || !trackTimesCheckbox.checked)\n        return;\n    const startTimeInput = document.getElementById('StartTime');\n    if (!startTimeInput || !startTimeInput.value)\n        return;\n    const start = parseTimeStringToDate(startTimeInput.value);\n    if (!start)\n        return;\n    $(\"#results li\").each(function () {\n        const finishInput = $(this).find('input[name=\"FinishTime\"]')[0];\n        const elapsedInput = $(this).find('input[name=\"ElapsedTime\"]')[0];\n        if (!finishInput && !elapsedInput)\n            return;\n        // If elapsed is set, recalc finish; else if finish is set, recalc elapsed\n        if (elapsedInput && elapsedInput.value) {\n            const elapsedMs = parseElapsedTimeString(elapsedInput.value);\n            if (elapsedMs !== null) {\n                let finish = new Date(start.getTime() + elapsedMs);\n                // Always ensure finish is after start (roll to next day if needed)\n                if (finish < start)\n                    finish = new Date(finish.getTime() + 24 * 3600 * 1000);\n                finishInput.value = formatTimeForInput(finish);\n            }\n        }\n        else if (finishInput && finishInput.value) {\n            let finish = parseTimeStringToDate(finishInput.value, start);\n            if (finish) {\n                // Always ensure finish is after start (roll to next day if needed)\n                if (finish < start)\n                    finish = new Date(finish.getTime() + 24 * 3600 * 1000);\n                const elapsedMs = finish.getTime() - start.getTime();\n                elapsedInput.value = formatElapsedTime(elapsedMs);\n                // Also update finishInput in case we rolled to next day\n                finishInput.value = formatTimeForInput(finish);\n            }\n        }\n    });\n}\ninitialize();\nfunction parseTimeStringToDate(timeString, baseDate) {\n    // timeString: \"HH:mm:ss\" or \"HH:mm\" or \"hh:mm:ss\" or \"hh:mm\"\n    if (!timeString)\n        return null;\n    const parts = timeString.split(\":\");\n    if (parts.length < 2)\n        return null;\n    const d = baseDate ? new Date(baseDate) : new Date();\n    d.setSeconds(0, 0);\n    d.setHours(parseInt(parts[0], 10));\n    d.setMinutes(parseInt(parts[1], 10));\n    if (parts.length > 2)\n        d.setSeconds(parseInt(parts[2], 10));\n    return d;\n}\nfunction formatElapsedTime(ms) {\n    // ms: milliseconds\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${seconds.toString().padStart(2, \"0\")}`;\n}\nfunction parseElapsedTimeString(str) {\n    // \"hh:mm:ss\" or \"mm:ss\" or \"ss\"\n    if (!str)\n        return null;\n    const parts = str.split(\":\").map(Number);\n    if (parts.some(isNaN))\n        return null;\n    let seconds = 0;\n    if (parts.length === 3) {\n        seconds = parts[0] * 3600 + parts[1] * 60 + parts[2];\n    }\n    else if (parts.length === 2) {\n        seconds = parts[0] * 60 + parts[1];\n    }\n    else if (parts.length === 1) {\n        seconds = parts[0];\n    }\n    else {\n        return null;\n    }\n    return seconds * 1000;\n}\nfunction formatTimeForInput(date) {\n    // Returns \"HH:mm:ss\" for input[type=time]\n    return date.toTimeString().slice(0, 8);\n}\nfunction InitializeSpeech(onComplete) {\n    if (!!window.SpeechSDK) {\n        document.getElementById('speechwarning').style.display = 'none';\n        onComplete(window.SpeechSDK);\n    }\n}\nlet language;\nlet region;\nlet authorizationToken;\nlet timeOfLastToken;\nlet timeOfLastRecognized;\nlet failureCount = 0;\nlet SpeechSDK;\nlet phraseDiv;\nlet scenarioStartButton, scenarioStopButton;\nlet reco;\nfunction resetUiForScenarioStart() {\n    phraseDiv.innerHTML = \"\";\n}\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    scenarioStartButton = document.getElementById('scenarioStartButton');\n    scenarioStopButton = document.getElementById('scenarioStopButton');\n    phraseDiv = document.getElementById(\"phraseDiv\");\n    // if the buttons aren't there, don't enable.\n    if (!!scenarioStopButton) {\n        scenarioStopButton.addEventListener(\"click\", stopContinuousRecognition);\n    }\n    if (!!scenarioStartButton) {\n        scenarioStartButton.addEventListener(\"click\", doContinuousRecognition);\n        InitializeSpeech(function (speechSdk) {\n            SpeechSDK = speechSdk;\n        });\n    }\n});\nfunction getAudioConfig() {\n    // Used to have options to choose other microphones.\n    return SpeechSDK.AudioConfig.fromDefaultMicrophoneInput();\n}\nfunction getSpeechConfig(sdkConfigType) {\n    let speechConfig;\n    if (authorizationToken) {\n        speechConfig = sdkConfigType.fromAuthorizationToken(authorizationToken, region);\n    }\n    // Setting the result output format to Detailed will request that the underlying\n    // result JSON include alternates, confidence scores, lexical forms, and other\n    // advanced information.\n    //speechConfig.outputFormat = SpeechSDK.OutputFormat.Detailed;\n    speechConfig.setProperty(SpeechSDK.SpeechServiceConnection_EndSilenceTimeoutMs, 1000);\n    speechConfig.speechRecognitionLanguage = language;\n    return speechConfig;\n}\nfunction onRecognized(sender, recognitionEventArgs) {\n    onRecognizedResult(recognitionEventArgs.result);\n}\nfunction onRecognizedResult(result) {\n    console.debug(`(recognized)  Reason: ${SpeechSDK.ResultReason[result.reason]}`);\n    switch (result.reason) {\n        case SpeechSDK.ResultReason.NoMatch:\n            let noMatchDetail = SpeechSDK.NoMatchDetails.fromResult(result);\n            console.debug(` NoMatchReason: ${SpeechSDK.NoMatchReason[noMatchDetail.reason]}\\r\\n`);\n            stopIfTimedOut();\n            break;\n        case SpeechSDK.ResultReason.Canceled:\n            let cancelDetails = SpeechSDK.CancellationDetails.fromResult(result);\n            console.debug(` CancellationReason: ${SpeechSDK.CancellationReason[cancelDetails.reason]}`);\n            console.debug(cancelDetails.reason === SpeechSDK.CancellationReason.Error\n                ? `: ${cancelDetails.errorDetails}` : ``);\n            stopIfTimedOut();\n            break;\n        case SpeechSDK.ResultReason.RecognizedSpeech:\n            //let detailedResultJson = JSON.parse(result.json);\n            //// Detailed result JSON includes substantial extra information:\n            ////  detailedResultJson['NBest'] is an array of recognition alternates\n            ////  detailedResultJson['NBest'][0] is the highest-confidence alternate\n            ////  ...['Confidence'] is the raw confidence score of an alternate\n            ////  ...['Lexical'] and others provide different result forms\n            //let displayText = detailedResultJson['DisplayText'];\n            //phraseDiv.innerHTML += `Detailed result for \"${displayText}\":\\r\\n`\n            //    + `${JSON.stringify(detailedResultJson, null, 2)}\\r\\n`;\n            if (result.text) {\n                phraseDiv.innerHTML = result.text;\n            }\n            if (!!result.text) {\n                addPotentialMatches(normalizeText(result.text) + \" \");\n            }\n            break;\n    }\n}\nfunction addPotentialMatches(result) {\n    console.debug(result);\n    let comp;\n    let matchString;\n    let newResultString;\n    comp =\n        allCompetitors.find(c => c.sailNumber && result.startsWith(normalizeText(c.sailNumber) + \" \"));\n    if (comp) {\n        matchString = normalizeText(comp.sailNumber);\n    }\n    if (!comp) {\n        comp = allCompetitors.find(c => c.alternativeSailNumber && result.startsWith(normalizeText(c.alternativeSailNumber) + \" \"));\n        if (comp) {\n            matchString = normalizeText(comp.alternativeSailNumber);\n        }\n    }\n    if (!comp) {\n        comp =\n            allCompetitors.find(c => c.name && result.startsWith(normalizeText(c.name) + \" \"));\n        if (comp) {\n            matchString = normalizeText(comp.name);\n        }\n    }\n    let scoreCode;\n    if (comp) {\n        addNewCompetitor(comp);\n        timeOfLastRecognized = Date.now();\n        newResultString = result.substr(matchString.length).trimLeft();\n    }\n    else {\n        // look for scorecode\n        scoreCode = scoreCodes.find(sc => result.startsWith(normalizeText(sc.name) + \" \"));\n        setLastCompCode(scoreCode.name);\n        matchString = normalizeText(scoreCode.name);\n        newResultString = result.substr(matchString.length).trimLeft();\n    }\n    if (!comp && !scoreCode) {\n        //didn't find anything, trim a word off and try again.\n        if (!newResultString && (result.indexOf(\" \") > -1)) {\n            newResultString = result.substr(result.indexOf(\" \") + 1).trimLeft();\n        }\n    }\n    if (newResultString.length > 0) {\n        addPotentialMatches(newResultString);\n    }\n    stopIfTimedOut();\n}\nfunction normalizeText(fullText) {\n    if (!!fullText) {\n        return fullText.replace(/[.?,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").toUpperCase();\n    }\n    return null;\n}\nfunction onSessionStarted(sender, sessionEventArgs) {\n    console.debug(`(sessionStarted)`);\n    scenarioStartButton.style.display = \"none\";\n    scenarioStopButton.style.display = \"block\";\n    phraseDiv.innerHTML = \"Listening\";\n}\nfunction onSessionStopped(sender, sessionEventArgs) {\n    console.debug(`(sessionStopped)`);\n    phraseDiv.innerHTML = \"\";\n    scenarioStartButton.style.display = \"block\";\n    scenarioStopButton.style.display = \"none\";\n}\nfunction onCanceled(sender, cancellationEventArgs) {\n    window.console.log(cancellationEventArgs);\n    console.debug(\"(cancel) Reason: \" + SpeechSDK.CancellationReason[cancellationEventArgs.reason]);\n    if (cancellationEventArgs.reason === SpeechSDK.CancellationReason.Error) {\n        console.debug(\": \" + cancellationEventArgs.errorDetails);\n    }\n    stopIfTimedOut();\n}\nfunction applyCommonConfigurationTo(recognizer) {\n    recognizer.recognized = onRecognized;\n    // The 'canceled' event signals that the service has stopped processing speech.\n    // https://docs.microsoft.com/javascript/api/microsoft-cognitiveservices-speech-sdk/speechrecognitioncanceledeventargs?view=azure-node-latest\n    // This can happen for two broad classes of reasons:\n    // 1. An error was encountered.\n    //    In this case, the .errorDetails property will contain a textual representation of the error.\n    // 2. No additional audio is available.\n    //    This is caused by the input stream being closed or reaching the end of an audio file.\n    recognizer.canceled = onCanceled;\n    reco.sessionStarted = onSessionStarted;\n    reco.sessionStopped = onSessionStopped;\n    // PhraseListGrammar allows for the customization of recognizer vocabulary.\n    // See https://docs.microsoft.com/azure/cognitive-services/speech-service/get-started-speech-to-text#improve-recognition-accuracy\n    if (competitorSuggestions) {\n        let phraseListGrammar = SpeechSDK.PhraseListGrammar.fromRecognizer(reco);\n        for (let index = 0; index < allCompetitors.length; index++) {\n            if (allCompetitors[index].sailNumber) {\n                phraseListGrammar.addPhrase(allCompetitors[index].sailNumber);\n            }\n            if (allCompetitors[index].alternativeSailNumber) {\n                phraseListGrammar.addPhrase(allCompetitors[index].alternativeSailNumber);\n            }\n            if (allCompetitors[index].name) {\n                phraseListGrammar.addPhrase(allCompetitors[index].name);\n            }\n        }\n        for (let index = 0; index < scoreCodes.length; index++) {\n            phraseListGrammar.addPhrase(scoreCodes[index].name);\n        }\n    }\n}\nfunction stopIfTimedOut() {\n    if (timeOfLastRecognized < Date.now() - (30000)) {\n        stopContinuousRecognition();\n    }\n}\nfunction doContinuousRecognition() {\n    resetUiForScenarioStart();\n    timeOfLastRecognized = Date.now();\n    if (timeOfLastToken < Date.now() - (5 * 60000)) {\n        RequestAuthorizationToken(doContinuousRecognition);\n        return;\n    }\n    let audioConfig = getAudioConfig();\n    let speechConfig = getSpeechConfig(SpeechSDK.SpeechConfig);\n    if (!speechConfig)\n        return;\n    // Create the SpeechRecognizer and set up common event handlers and PhraseList data\n    reco = new SpeechSDK.SpeechRecognizer(speechConfig, audioConfig);\n    applyCommonConfigurationTo(reco);\n    reco.startContinuousRecognitionAsync();\n}\nfunction stopContinuousRecognition() {\n    reco.stopContinuousRecognitionAsync(function () {\n        reco.close();\n        reco = undefined;\n    }, function (err) {\n        reco.close();\n        reco = undefined;\n    });\n}\nfunction setLastCompCode(scoreCode) {\n    $(\".select-code\").last().val(scoreCode);\n}\nfunction onFinishTimeChanged() {\n    const finishInput = this;\n    const li = $(finishInput).closest('li');\n    const elapsedInput = li.find('input[name=\"ElapsedTime\"]')[0];\n    const startTimeInput = document.getElementById('StartTime');\n    if (!startTimeInput || !startTimeInput.value || !finishInput.value)\n        return;\n    // Parse StartTime and FinishTime\n    const start = parseTimeStringToDate(startTimeInput.value);\n    const finish = parseTimeStringToDate(finishInput.value, start);\n    if (!start || !finish)\n        return;\n    let elapsedMs = finish.getTime() - start.getTime();\n    if (elapsedMs < 0)\n        elapsedMs += 24 * 3600 * 1000; // handle midnight wrap\n    elapsedInput.value = formatElapsedTime(elapsedMs);\n}\nfunction onElapsedTimeChanged() {\n    const elapsedInput = this;\n    const li = $(elapsedInput).closest('li');\n    const finishInput = li.find('input[name=\"FinishTime\"]')[0];\n    const startTimeInput = document.getElementById('StartTime');\n    if (!startTimeInput || !startTimeInput.value || !elapsedInput.value)\n        return;\n    const start = parseTimeStringToDate(startTimeInput.value);\n    const elapsedMs = parseElapsedTimeString(elapsedInput.value);\n    if (!start || elapsedMs === null)\n        return;\n    const finish = new Date(start.getTime() + elapsedMs);\n    finishInput.value = formatTimeForInput(finish);\n}\n//# sourceMappingURL=raceEditor.js.map"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","jQuery","bootstrap","noCodeString","checkEnter","e","ev","event","test","srcElement","tagName","keyCode","which","charCode","loadSeriesOptions","clubId","date","val","data","seriesOptions","seriesSelect","selectedSeriesValues","hasClass","select2","empty","_key","value","series","append","attr","id","toString","text","name","width","placeholder","allowClear","trigger","setSeries","loadFleet","fleetId","sel","document","getElementById","boatClassId","options","selectedIndex","getAttribute","length","getCompetitors","displayRaceNumber","dateChanged","console","log","clearWeatherFields","weatherChanged","raceStateChanged","state","initials","icon","description","windSpeed","windGust","windDirection","temperature","humidity","cloudCoverPercent","populateEmptyWeatherFields","compCreateSubmit","preventDefault","show","form","this","url","type","beforeSend","xhr","setRequestHeader","serialize","success","completeCompCreate","error","completeCompCreateFailed","hide","modal","moveUp","btn","target","resultItem","closest","prev","insertAfter","calculatePlaces","moveDown","next","insertBefore","deleteResult","activeElement","blur","compId","find","remove","initializeAutoComplete","updateButtonFooter","confirmDelete","compName","hideScoreButtonFooter","addNewCompetitorFromButton","HTMLButtonElement","competitorId","dataset","addNewCompetitor","allCompetitors","c","competitor","resultDiv","compListItem","cloneNode","setAttribute","span","getElementsByClassName","appendChild","createTextNode","sailNumber","alternativeSailNumber","style","display","deleteButtons","i","trackTimesChecked","checked","finishDiv","finishInput","elapsedDiv","elapsedInput","raceDateStr","now","Date","toISOString","substring","toTimeString","slice","startTimeInput","start","parseTimeStringToDate","finish","setDate","getDate","elapsedMs","getTime","formatElapsedTime","change","onFinishTimeChanged","onElapsedTimeChanged","competitorIsInResults","animate","scrollTop","offset","top","resultItems","getElementsByTagName","scoreCount","len","origScore","shouldCompKeepScore","textContent","getCompetitorCode","removeAttribute","codepointsinput","shouldHaveManualEntry","comp","competitorSuggestions","forEach","raceNumElement","regattaId","raceDate","order","language","region","authorizationToken","timeOfLastToken","timeOfLastRecognized","autoCompleteSetup","push","getSuggestions","autocomplete","dispose","lookup","onSelect","suggestion","autoSelectFirst","triggerSelectOnValidInput","noCache","codeText","getCompetitorCodePoints","codePoints","scoreCodes","filter","s","formula","RequestAuthorizationToken","continuation","window","speechInfoUrl","dataType","failureCount","token","userLanguage","textStatus","errorThrown","updateAllScoreTimesForStartTimeChange","trackTimesCheckbox","each","parseElapsedTimeString","formatTimeForInput","timeString","baseDate","parts","split","setSeconds","setHours","parseInt","setMinutes","ms","totalSeconds","Math","floor","hours","minutes","seconds","padStart","str","map","Number","some","isNaN","querySelector","onkeypress","selectedDate","tomorrow","yesterday","getMinutes","getTimezoneOffset","on","click","submit","waiting","removeScoresFieldsFromForm","listIndex","input","createElement","addScoresFieldsToForm","onload","updateTimingFields","css","toggleTimingFields","addEventListener","initialize","SpeechSDK","phraseDiv","scenarioStartButton","scenarioStopButton","reco","onRecognized","sender","recognitionEventArgs","result","debug","ResultReason","reason","NoMatch","noMatchDetail","NoMatchDetails","fromResult","NoMatchReason","stopIfTimedOut","Canceled","cancelDetails","CancellationDetails","CancellationReason","Error","errorDetails","RecognizedSpeech","innerHTML","addPotentialMatches","normalizeText","onRecognizedResult","matchString","newResultString","scoreCode","startsWith","substr","trimLeft","sc","last","setLastCompCode","indexOf","fullText","replace","toUpperCase","onSessionStarted","sessionEventArgs","onSessionStopped","onCanceled","cancellationEventArgs","stopContinuousRecognition","doContinuousRecognition","audioConfig","AudioConfig","fromDefaultMicrophoneInput","speechConfig","sdkConfigType","fromAuthorizationToken","setProperty","SpeechServiceConnection_EndSilenceTimeoutMs","speechRecognitionLanguage","getSpeechConfig","SpeechConfig","SpeechRecognizer","recognizer","recognized","canceled","sessionStarted","sessionStopped","phraseListGrammar","PhraseListGrammar","fromRecognizer","index","addPhrase","applyCommonConfigurationTo","startContinuousRecognitionAsync","stopContinuousRecognitionAsync","close","undefined","err","onComplete","speechSdk"],"sourceRoot":""}