{"version":3,"file":"competitorStatsChart.js","mappings":"oBAEA,WAQI,IANA,IAGIA,EAAc,IAEdC,EAASC,SAASC,uBAAuB,gBACpCC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC/BE,EAAU,IAAML,EAAOG,GAAGG,GACtBN,EAAOG,GAAGI,QAAQC,aAClBR,EAAOG,GAAGI,QAAQE,YAI1B,SAASJ,EAAUK,EAAWF,EAAcC,GACxC,IAAIE,EAAiBD,EACjBE,EAAW,kCAAoCJ,EAC/C,eAAiBC,EACH,oBAAR,IAA6B,MAANI,IAC7BA,GAAGC,KAAKF,GAAUG,MAItB,SAA0BC,GACtB,GAAa,OAATA,GAAiC,IAAhBA,EAAKZ,OACtB,OAEJ,IAAIa,EAASD,EAAKE,KAAIC,GAAKA,EAAEC,OAAS,IACtC,IACIC,EAAWC,KAAKC,OAAON,GAQ3B,IAAIO,EAAaX,GAAGY,OAAOd,GACtBe,KAAK,QAASC,KACdD,KAAK,SAAU3B,KACf6B,OAAO,KACPF,KAAK,YACF,oBAEJG,EAAShB,GAAGiB,YACXC,MAAM,CAAC,EA1CH,MA2CJC,OAAOhB,EAAKE,KAAI,SAAUe,GAAK,OAAOA,EAAEC,OAASD,EAAEE,IAAM,KACzDC,QAAQ,IAEbZ,EAAWI,OAAO,KACbF,KAAK,YAAa,oBAClBW,KAAKxB,GAAGyB,WAAWT,IACnBU,UAAU,QACVb,KAAK,YAAa,+BAClBc,MAAM,cAAe,OAG1B,IAAIC,EAAS5B,GAAG6B,cACXV,OAAO,CA9BG,EA8BQX,IAClBU,MAAM,CAAChC,EAAa,IAGrB4C,EAAaF,EAAOG,QACnBC,QAAOC,GAAQC,OAAOC,UAAUF,KAEjCG,EAAQpC,GAAGqC,SAAST,GACnBU,WAAWR,GACXS,WAAWvC,GAAGwC,OAAO,MAE1B7B,EAAWI,OAAO,KAAKS,KAAKY,GAE5BzB,EAAWI,OAAO,QACbF,KAAK,cAAe,UACpBA,KAAK,IAAKC,KACVD,KAAK,IAAK3B,KACVuD,KAAK,kBAGV9B,EAAWI,OAAO,QACbF,KAAK,cAAe,UACpBA,KAAK,YAAa,eAClBA,KAAK,KAAK,IACVA,KAAK,KAAK,KACV4B,KAAK,cAGV9B,EAAWe,UAAU,SAChBvB,KAAKA,GACLuC,QACA3B,OAAO,QACPF,KAAK,KAAK,SAAUO,GAAK,OAAOJ,EAAOI,EAAEC,OAASD,EAAEE,KAAO,IAC3DT,KAAK,KAAK,SAAUO,GAAK,OAAOQ,EAAOR,EAAEb,MAAQ,IACjDM,KAAK,QAASG,EAAO2B,aACrB9B,KAAK,UAAU,SAAUO,GAAK,OAAOlC,EAAc0C,EAAOR,EAAEb,MAAQ,IACpEM,KAAK,OAAQ,UAEtB,GACJ,CAoCH,CAtID,E","sources":["webpack://asp.net/./wwwroot/js/competitorStatsChart.js"],"sourcesContent":["\"use strict\";\r\n\r\n(function () {\r\n\r\n    var margin = 30;\r\n    var margin = { top: 30, right: 30, bottom: 70, left: 60 },\r\n        chartWidth = 460 - margin.left - margin.right,\r\n        chartHeight = 300 - margin.top - margin.bottom;\r\n\r\n    var charts = document.getElementsByClassName(\"season-chart\");\r\n    for (var i = 0; i < charts.length; i++) {\r\n        drawChart(\"#\" + charts[i].id,\r\n            charts[i].dataset.competitorId,\r\n            charts[i].dataset.seasonName)\r\n    }\r\n\r\n\r\n    function drawChart(elementId, competitorId, seasonName ) {\r\n        var chartElementId = elementId;\r\n        var dataPath = \"/competitor/chart?competitorId=\" + competitorId +\r\n            \"&seasonName=\" + seasonName;\r\n        if (typeof(d3) != \"undefined\" && d3 != null) {\r\n            d3.json(dataPath).then(processChartData);\r\n        }\r\n\r\n\r\n        function processChartData(data) {\r\n            if (data === null || data.length === 1) {\r\n                return;\r\n            }\r\n            var counts = data.map(r => r.count || 0);\r\n            let minCount = 0;\r\n            let maxCount = Math.max(...counts);\r\n\r\n\r\n            //var svgElement = d3.select(chartElementId)\r\n            //    .attr(\"width\", chartWidth)\r\n            //    .attr(\"height\", chartHeight)\r\n            //    //.call(responsivefy);\r\n\r\n            var svgElement = d3.select(chartElementId)\r\n                .attr(\"width\", chartWidth + margin.left + margin.right)\r\n                .attr(\"height\", chartHeight + margin.top + margin.bottom)\r\n                .append(\"g\")\r\n                .attr(\"transform\",\r\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n            var xScale = d3.scaleBand()\r\n                .range([0, chartWidth])\r\n                .domain(data.map(function (d) { return d.place || d.code; }))\r\n                .padding(0.3);\r\n\r\n            svgElement.append(\"g\")\r\n                .attr(\"transform\", \"translate(0,\" + chartHeight + \")\")\r\n                .call(d3.axisBottom(xScale))\r\n                .selectAll(\"text\")\r\n                .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n                .style(\"text-anchor\", \"end\");\r\n\r\n\r\n            var yScale = d3.scaleLinear()\r\n                .domain([minCount, maxCount])\r\n                .range([chartHeight, 0]);\r\n\r\n            \r\n            var yAxisTicks = yScale.ticks()\r\n                .filter(tick => Number.isInteger(tick));\r\n\r\n            var yAxis = d3.axisLeft(yScale)\r\n                .tickValues(yAxisTicks)\r\n                .tickFormat(d3.format('d'));\r\n\r\n            svgElement.append(\"g\").call(yAxis);\r\n\r\n            svgElement.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\"x\", chartWidth / 2)\r\n                .attr(\"y\", chartHeight + margin.top + 15)\r\n                .text(\"Place Finished\");\r\n\r\n            // Y axis label:\r\n            svgElement.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\"transform\", \"rotate(-90)\")\r\n                .attr(\"y\", -margin.left + 30)\r\n                .attr(\"x\", -chartHeight / 2)\r\n                .text(\"# of Races\")\r\n\r\n            // Bars\r\n            svgElement.selectAll(\"mybar\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"rect\")\r\n                .attr(\"x\", function (d) { return xScale(d.place || d.code); })\r\n                .attr(\"y\", function (d) { return yScale(d.count); })\r\n                .attr(\"width\", xScale.bandwidth())\r\n                .attr(\"height\", function (d) { return chartHeight - yScale(d.count); })\r\n                .attr(\"fill\", \"#265180\")\r\n\r\n        }\r\n    }\r\n\r\n    function responsivefy(svg) {\r\n        // get container + svg aspect ratio\r\n        //var container = d3.select(svg.node().parentNode),\r\n        //    width = parseInt(svg.style(\"width\")),\r\n        //    height = parseInt(svg.style(\"height\")),\r\n        //    aspect = width / height;\r\n\r\n        //// add viewBox and preserveAspectRatio properties,\r\n        //// and call resize so that svg resizes on inital page load\r\n        //svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\r\n        //    .attr(\"preserveAspectRatio\", \"xMinYMid\")\r\n        //    .call(resize);\r\n\r\n        //// to register multiple listeners for same event type, \r\n        //// you need to add namespace, i.e., 'click.foo'\r\n        //// necessary if you call invoke this function for multiple svgs\r\n        //// api docs: https://github.com/mbostock/d3/wiki/Selections#on\r\n        //d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\r\n\r\n        //// get width of container and resize svg to fit it\r\n        //function resize() {\r\n        //    var targetWidth = parseInt(container.style(\"width\"));\r\n        //    if (targetWidth <= 100) {// assume percent\r\n        //        targetWidth = width;\r\n        //    }\r\n        //    svg.attr(\"width\", targetWidth);\r\n        //    svg.attr(\"height\", Math.round(targetWidth / aspect));\r\n        //}\r\n    \r\n    }\r\n    return {\r\n        drawChart: drawChart\r\n    };\r\n\r\n})();"],"names":["chartHeight","charts","document","getElementsByClassName","i","length","drawChart","id","dataset","competitorId","seasonName","elementId","chartElementId","dataPath","d3","json","then","data","counts","map","r","count","maxCount","Math","max","svgElement","select","attr","chartWidth","append","xScale","scaleBand","range","domain","d","place","code","padding","call","axisBottom","selectAll","style","yScale","scaleLinear","yAxisTicks","ticks","filter","tick","Number","isInteger","yAxis","axisLeft","tickValues","tickFormat","format","text","enter","bandwidth"],"sourceRoot":""}