{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./wwwroot/js/competitorStatsChart.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","margin","chartWidth","chartHeight","charts","document","getElementsByClassName","length","drawChart","id","dataset","competitorId","seasonName","elementId","chartElementId","dataPath","d3","json","then","data","counts","map","count","maxCount","Math","max","svgElement","select","attr","append","xScale","scaleBand","range","domain","place","code","padding","axisBottom","selectAll","style","yScale","scaleLinear","axisLeft","text","enter","bandwidth"],"mappings":"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","file":"competitorStatsChart.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\"use strict\";\r\n\r\n(function () {\r\n\r\n    var margin = 30;\r\n    var margin = { top: 30, right: 30, bottom: 70, left: 60 },\r\n        chartWidth = 460 - margin.left - margin.right,\r\n        chartHeight = 300 - margin.top - margin.bottom;\r\n\r\n    var charts = document.getElementsByClassName(\"season-chart\");\r\n    for (var i = 0; i < charts.length; i++) {\r\n        drawChart(\"#\" + charts[i].id,\r\n            charts[i].dataset.competitorId,\r\n            charts[i].dataset.seasonName)\r\n    }\r\n\r\n\r\n    function drawChart(elementId, competitorId, seasonName ) {\r\n        var chartElementId = elementId;\r\n        var dataPath = \"/competitor/chart?competitorId=\" + competitorId +\r\n            \"&seasonName=\" + seasonName;\r\n        if (typeof(d3) != \"undefined\" && d3 != null) {\r\n            d3.json(dataPath).then(processChartData);\r\n        }\r\n\r\n\r\n        function processChartData(data) {\r\n            if (data === null || data.length === 1) {\r\n                return;\r\n            }\r\n            var counts = data.map(r => r.count || 0);\r\n            let minCount = 0;\r\n            let maxCount = Math.max(...counts);\r\n\r\n\r\n            //var svgElement = d3.select(chartElementId)\r\n            //    .attr(\"width\", chartWidth)\r\n            //    .attr(\"height\", chartHeight)\r\n            //    //.call(responsivefy)\r\n                ;\r\n            var svgElement = d3.select(chartElementId)\r\n                .attr(\"width\", chartWidth + margin.left + margin.right)\r\n                .attr(\"height\", chartHeight + margin.top + margin.bottom)\r\n                .append(\"g\")\r\n                .attr(\"transform\",\r\n                    \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n            var xScale = d3.scaleBand()\r\n                .range([0, chartWidth])\r\n                .domain(data.map(function (d) { return d.place || d.code; }))\r\n                .padding(0.3);\r\n\r\n            svgElement.append(\"g\")\r\n                .attr(\"transform\", \"translate(0,\" + chartHeight + \")\")\r\n                .call(d3.axisBottom(xScale))\r\n                .selectAll(\"text\")\r\n                .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n                .style(\"text-anchor\", \"end\");\r\n\r\n\r\n            var yScale = d3.scaleLinear()\r\n                .domain([minCount, maxCount])\r\n                .range([chartHeight, 0]);\r\n\r\n            svgElement.append(\"g\").call(d3.axisLeft(yScale));\r\n\r\n            svgElement.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\"x\", chartWidth / 2)\r\n                .attr(\"y\", chartHeight + margin.top + 15)\r\n                .text(\"Place Finished\");\r\n\r\n            // Y axis label:\r\n            svgElement.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\"transform\", \"rotate(-90)\")\r\n                .attr(\"y\", -margin.left + 30)\r\n                .attr(\"x\", -chartHeight / 2)\r\n                .text(\"# of Races\")\r\n\r\n            // Bars\r\n            svgElement.selectAll(\"mybar\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"rect\")\r\n                .attr(\"x\", function (d) { return xScale(d.place || d.code); })\r\n                .attr(\"y\", function (d) { return yScale(d.count); })\r\n                .attr(\"width\", xScale.bandwidth())\r\n                .attr(\"height\", function (d) { return chartHeight - yScale(d.count); })\r\n                .attr(\"fill\", \"#265180\")\r\n\r\n\r\n            //function onMouseOver(d) {\r\n            //    compId = d.competitorId || d.id;\r\n            //    svgElement\r\n            //        .selectAll(\"path.compLine\")\r\n            //        .attr(\"opacity\", .4);\r\n            //    svgElement\r\n            //        .selectAll(\"path[data-compId='\" + compId + \"']\")\r\n            //        .attr(\"stroke-width\", 4)\r\n            //        .attr(\"opacity\", 1);\r\n            //    svgElement\r\n            //        .selectAll(\"g.legendEntry\")\r\n            //        .attr(\"opacity\", .4);\r\n            //    svgElement\r\n            //        .selectAll(\"g.legendEntry[data-compId='\" + compId + \"']\")\r\n            //        .attr(\"opacity\", 1);\r\n            //    svgElement\r\n            //        .selectAll(\"g.legendEntry[data-compId='\" + compId + \"'] rect\")\r\n            //        .attr(\"stroke\", (c) => color(c.id));\r\n            //    svgElement.selectAll(\"circle\")\r\n            //        .attr(\"opacity\", .4);\r\n            //    svgElement\r\n            //        .selectAll(\"circle[data-compId='\" + compId + \"']\")\r\n            //        .attr(\"opacity\", 1);\r\n\r\n            //}\r\n            //function onMouseOut(d) {\r\n            //    svgElement\r\n            //        .selectAll(\"path.compLine\")\r\n            //        .attr(\"stroke-width\", 1.5);\r\n            //    svgElement\r\n            //        .selectAll(\"path.compLine\")\r\n            //        .attr(\"opacity\", 1);\r\n            //    svgElement\r\n            //        .selectAll(\"g.legendEntry rect\")\r\n            //        .attr(\"stroke\", \"none\");\r\n            //    tooltipGroup\r\n            //        .attr(\"opacity\", 0)\r\n            //        .attr(\"transform\", \"translate(\" + chartOverallWidth + \",\"\r\n            //            + chartOverallHeight + \")\");\r\n\r\n            //    svgElement\r\n            //        .selectAll(\"path.compLine\")\r\n            //        .attr(\"opacity\", 1);\r\n            //    svgElement\r\n            //        .selectAll(\"g.legendEntry\")\r\n            //        .attr(\"opacity\", 1);\r\n            //    svgElement.selectAll(\"circle\")\r\n            //        .attr(\"opacity\", 1);\r\n            //}\r\n\r\n\r\n\r\n            //lineData = d3.line()\r\n            //    .x(d => xScale(getDate(d, data)))\r\n            //    .y(d => getY(d, data));\r\n\r\n\r\n            //tooltipGroup = svgElement\r\n            //    .append(\"g\")\r\n            //    .attr(\"opacity\", 0);\r\n            //tooltipGroup.append(\"rect\")\r\n            //    .attr(\"width\", 120)\r\n            //    .attr(\"height\", legendLineHeight * 3)\r\n            //    .attr(\"fill\", \"white\")\r\n            //    .attr(\"fill-opacity\", \".7\");\r\n            //tooltipGroup.append(\"text\")\r\n            //    .attr('x', 5)\r\n            //    .attr(\"y\", legendLineHeight - 5)\r\n            //    .style(\"font-size\", \"11px\");\r\n\r\n        }\r\n    }\r\n\r\n    function responsivefy(svg) {\r\n        // get container + svg aspect ratio\r\n        //var container = d3.select(svg.node().parentNode),\r\n        //    width = parseInt(svg.style(\"width\")),\r\n        //    height = parseInt(svg.style(\"height\")),\r\n        //    aspect = width / height;\r\n\r\n        //// add viewBox and preserveAspectRatio properties,\r\n        //// and call resize so that svg resizes on inital page load\r\n        //svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\r\n        //    .attr(\"preserveAspectRatio\", \"xMinYMid\")\r\n        //    .call(resize);\r\n\r\n        //// to register multiple listeners for same event type, \r\n        //// you need to add namespace, i.e., 'click.foo'\r\n        //// necessary if you call invoke this function for multiple svgs\r\n        //// api docs: https://github.com/mbostock/d3/wiki/Selections#on\r\n        //d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\r\n\r\n        //// get width of container and resize svg to fit it\r\n        //function resize() {\r\n        //    var targetWidth = parseInt(container.style(\"width\"));\r\n        //    if (targetWidth <= 100) {// assume percent\r\n        //        targetWidth = width;\r\n        //    }\r\n        //    svg.attr(\"width\", targetWidth);\r\n        //    svg.attr(\"height\", Math.round(targetWidth / aspect));\r\n        //}\r\n    }\r\n\r\n    function processChartData(data) {\r\n        if (data === null) {\r\n            return;\r\n        }\r\n        var counts = data.map(r => r.count || 0);\r\n        let minCount = 0;\r\n        let maxCount = Math.max(...counts);\r\n\r\n\r\n        var svgElement = d3.select(chartElementId)\r\n            .attr(\"width\", chartWidth)\r\n            .attr(\"height\", chartHeight)\r\n            //.call(responsivefy)\r\n            ;\r\n\r\n        var xScale = d3.scaleBand()\r\n            .range([0, chartWidth])\r\n            .domain(data.map(function (d) { return (\"\"+d.place) || d.code; }))\r\n            .padding(0.3);\r\n\r\n        svgElement.append(\"g\")\r\n            .attr(\"transform\", \"translate(0,\" + chartHeight + \")\")\r\n            .call(d3.axisBottom(xScale))\r\n            .selectAll(\"text\")\r\n            .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n            .style(\"text-anchor\", \"end\");\r\n\r\n\r\n        var yScale = d3.scaleLinear()\r\n            .domain([minCount, maxCount])\r\n            .range([chartHeight, 0]);\r\n\r\n        svgElement.append(\"g\").call(d3.axisLeft(yScale));\r\n\r\n        // Bars\r\n        svgElement.selectAll(\"mybar\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"x\", function (d) { return xScale((\"\" + d.place) || d.code); })\r\n            .attr(\"y\", function (d) { return yScale(d.count); })\r\n            .attr(\"width\", xScale.bandwidth())\r\n            .attr(\"height\", function (d) { return chartHeight - yScale(d.count); })\r\n            .attr(\"fill\", \"#69b3a2\")\r\n\r\n\r\n        //function onMouseOver(d) {\r\n        //    compId = d.competitorId || d.id;\r\n        //    svgElement\r\n        //        .selectAll(\"path.compLine\")\r\n        //        .attr(\"opacity\", .4);\r\n        //    svgElement\r\n        //        .selectAll(\"path[data-compId='\" + compId + \"']\")\r\n        //        .attr(\"stroke-width\", 4)\r\n        //        .attr(\"opacity\", 1);\r\n        //    svgElement\r\n        //        .selectAll(\"g.legendEntry\")\r\n        //        .attr(\"opacity\", .4);\r\n        //    svgElement\r\n        //        .selectAll(\"g.legendEntry[data-compId='\" + compId + \"']\")\r\n        //        .attr(\"opacity\", 1);\r\n        //    svgElement\r\n        //        .selectAll(\"g.legendEntry[data-compId='\" + compId + \"'] rect\")\r\n        //        .attr(\"stroke\", (c) => color(c.id));\r\n        //    svgElement.selectAll(\"circle\")\r\n        //        .attr(\"opacity\", .4);\r\n        //    svgElement\r\n        //        .selectAll(\"circle[data-compId='\" + compId + \"']\")\r\n        //        .attr(\"opacity\", 1);\r\n\r\n        //}\r\n        //function onMouseOut(d) {\r\n        //    svgElement\r\n        //        .selectAll(\"path.compLine\")\r\n        //        .attr(\"stroke-width\", 1.5);\r\n        //    svgElement\r\n        //        .selectAll(\"path.compLine\")\r\n        //        .attr(\"opacity\", 1);\r\n        //    svgElement\r\n        //        .selectAll(\"g.legendEntry rect\")\r\n        //        .attr(\"stroke\", \"none\");\r\n        //    tooltipGroup\r\n        //        .attr(\"opacity\", 0)\r\n        //        .attr(\"transform\", \"translate(\" + chartOverallWidth + \",\"\r\n        //            + chartOverallHeight + \")\");\r\n\r\n        //    svgElement\r\n        //        .selectAll(\"path.compLine\")\r\n        //        .attr(\"opacity\", 1);\r\n        //    svgElement\r\n        //        .selectAll(\"g.legendEntry\")\r\n        //        .attr(\"opacity\", 1);\r\n        //    svgElement.selectAll(\"circle\")\r\n        //        .attr(\"opacity\", 1);\r\n        //}\r\n\r\n\r\n\r\n        //lineData = d3.line()\r\n        //    .x(d => xScale(getDate(d, data)))\r\n        //    .y(d => getY(d, data));\r\n\r\n\r\n        //tooltipGroup = svgElement\r\n        //    .append(\"g\")\r\n        //    .attr(\"opacity\", 0);\r\n        //tooltipGroup.append(\"rect\")\r\n        //    .attr(\"width\", 120)\r\n        //    .attr(\"height\", legendLineHeight * 3)\r\n        //    .attr(\"fill\", \"white\")\r\n        //    .attr(\"fill-opacity\", \".7\");\r\n        //tooltipGroup.append(\"text\")\r\n        //    .attr('x', 5)\r\n        //    .attr(\"y\", legendLineHeight - 5)\r\n        //    .style(\"font-size\", \"11px\");\r\n\r\n    }\r\n    return {\r\n        drawChart: drawChart\r\n    };\r\n\r\n})();"],"sourceRoot":""}